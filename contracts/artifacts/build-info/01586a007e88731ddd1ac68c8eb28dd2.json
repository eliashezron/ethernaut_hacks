{
	"id": "01586a007e88731ddd1ac68c8eb28dd2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fallout.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ncontract Fallout {\r\n  \r\n  mapping (address => uint) allocations;\r\n  address payable public owner;\r\n\r\n\r\n  /* constructor */\r\n  function Fal1out() public payable {\r\n    owner = payable(msg.sender);\r\n    allocations[owner] = msg.value;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n\t        require(\r\n\t            msg.sender == owner,\r\n\t            \"caller is not the owner\"\r\n\t        );\r\n\t        _;\r\n\t    }\r\n\r\n  function allocate() public payable {\r\n    allocations[msg.sender] = msg.value;\r\n  }\r\n\r\n  function sendAllocation(address payable allocator) public {\r\n    require(allocations[allocator] > 0);\r\n    allocator.transfer(allocations[allocator]);\r\n  }\r\n\r\n  function collectAllocations() public onlyOwner {\r\n    payable(msg.sender).transfer(address(this).balance);\r\n  }\r\n\r\n  function allocatorBalance(address allocator) public view returns (uint) {\r\n    return allocations[allocator];\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/fallout.sol": {
				"Fallout": {
					"abi": [
						{
							"inputs": [],
							"name": "Fal1out",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "allocator",
									"type": "address"
								}
							],
							"name": "allocatorBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectAllocations",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "allocator",
									"type": "address"
								}
							],
							"name": "sendAllocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fallout.sol\":60:941  contract Fallout {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fallout.sol\":60:941  contract Fallout {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fab5ddf\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8aa96f38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa2dea26f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xabaa9916\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xffd40b56\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fallout.sol\":186:297  function Fal1out() public payable {\r... */\n    tag_2:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/fallout.sol\":707:818  function collectAllocations() public onlyOwner {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/fallout.sol\":128:156  address payable public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fallout.sol\":546:701  function sendAllocation(address payable allocator) public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/fallout.sol\":457:540  function allocate() public payable {\r... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/fallout.sol\":824:938  function allocatorBalance(address allocator) public view returns (uint) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fallout.sol\":186:297  function Fal1out() public payable {\r... */\n    tag_9:\n        /* \"contracts/fallout.sol\":243:253  msg.sender */\n      caller\n        /* \"contracts/fallout.sol\":227:232  owner */\n      0x01\n      0x00\n        /* \"contracts/fallout.sol\":227:254  owner = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/fallout.sol\":282:291  msg.value */\n      callvalue\n        /* \"contracts/fallout.sol\":261:272  allocations */\n      0x00\n        /* \"contracts/fallout.sol\":261:279  allocations[owner] */\n      dup1\n        /* \"contracts/fallout.sol\":273:278  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fallout.sol\":261:279  allocations[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fallout.sol\":261:291  allocations[owner] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fallout.sol\":186:297  function Fal1out() public payable {\r... */\n      jump\t// out\n        /* \"contracts/fallout.sol\":707:818  function collectAllocations() public onlyOwner {\r... */\n    tag_12:\n        /* \"contracts/fallout.sol\":371:376  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fallout.sol\":357:376  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fallout.sol\":357:367  msg.sender */\n      caller\n        /* \"contracts/fallout.sol\":357:376  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/fallout.sol\":334:429  require(\r... */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/fallout.sol\":769:779  msg.sender */\n      caller\n        /* \"contracts/fallout.sol\":761:789  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fallout.sol\":761:812  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/fallout.sol\":790:811  address(this).balance */\n      selfbalance\n        /* \"contracts/fallout.sol\":761:812  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n        /* \"contracts/fallout.sol\":707:818  function collectAllocations() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/fallout.sol\":128:156  address payable public owner */\n    tag_15:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/fallout.sol\":546:701  function sendAllocation(address payable allocator) public {\r... */\n    tag_22:\n        /* \"contracts/fallout.sol\":644:645  0 */\n      0x00\n        /* \"contracts/fallout.sol\":619:630  allocations */\n      dup1\n        /* \"contracts/fallout.sol\":619:641  allocations[allocator] */\n      0x00\n        /* \"contracts/fallout.sol\":631:640  allocator */\n      dup4\n        /* \"contracts/fallout.sol\":619:641  allocations[allocator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fallout.sol\":619:645  allocations[allocator] > 0 */\n      gt\n        /* \"contracts/fallout.sol\":611:646  require(allocations[allocator] > 0) */\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n        /* \"contracts/fallout.sol\":653:662  allocator */\n      dup1\n        /* \"contracts/fallout.sol\":653:671  allocator.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fallout.sol\":653:695  allocator.transfer(allocations[allocator]) */\n      0x08fc\n        /* \"contracts/fallout.sol\":672:683  allocations */\n      0x00\n        /* \"contracts/fallout.sol\":672:694  allocations[allocator] */\n      dup1\n        /* \"contracts/fallout.sol\":684:693  allocator */\n      dup5\n        /* \"contracts/fallout.sol\":672:694  allocations[allocator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fallout.sol\":653:695  allocator.transfer(allocations[allocator]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n        /* \"contracts/fallout.sol\":546:701  function sendAllocation(address payable allocator) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/fallout.sol\":457:540  function allocate() public payable {\r... */\n    tag_24:\n        /* \"contracts/fallout.sol\":525:534  msg.value */\n      callvalue\n        /* \"contracts/fallout.sol\":499:510  allocations */\n      0x00\n        /* \"contracts/fallout.sol\":499:522  allocations[msg.sender] */\n      dup1\n        /* \"contracts/fallout.sol\":511:521  msg.sender */\n      caller\n        /* \"contracts/fallout.sol\":499:522  allocations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fallout.sol\":499:534  allocations[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fallout.sol\":457:540  function allocate() public payable {\r... */\n      jump\t// out\n        /* \"contracts/fallout.sol\":824:938  function allocatorBalance(address allocator) public view returns (uint) {\r... */\n    tag_29:\n        /* \"contracts/fallout.sol\":890:894  uint */\n      0x00\n        /* \"contracts/fallout.sol\":910:921  allocations */\n      dup1\n        /* \"contracts/fallout.sol\":910:932  allocations[allocator] */\n      0x00\n        /* \"contracts/fallout.sol\":922:931  allocator */\n      dup4\n        /* \"contracts/fallout.sol\":910:932  allocations[allocator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fallout.sol\":903:932  return allocations[allocator] */\n      swap1\n      pop\n        /* \"contracts/fallout.sol\":824:938  function allocatorBalance(address allocator) public view returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_47:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_49\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_51:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_53\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":212:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:575   */\n    tag_28:\n        /* \"#utility.yul\":372:378   */\n      0x00\n        /* \"#utility.yul\":421:423   */\n      0x20\n        /* \"#utility.yul\":409:418   */\n      dup3\n        /* \"#utility.yul\":400:407   */\n      dup5\n        /* \"#utility.yul\":396:419   */\n      sub\n        /* \"#utility.yul\":392:424   */\n      slt\n        /* \"#utility.yul\":389:391   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":437:438   */\n      0x00\n        /* \"#utility.yul\":434:435   */\n      dup1\n        /* \"#utility.yul\":427:439   */\n      revert\n        /* \"#utility.yul\":389:391   */\n    tag_56:\n        /* \"#utility.yul\":480:481   */\n      0x00\n        /* \"#utility.yul\":505:558   */\n      tag_57\n        /* \"#utility.yul\":550:557   */\n      dup5\n        /* \"#utility.yul\":541:547   */\n      dup3\n        /* \"#utility.yul\":530:539   */\n      dup6\n        /* \"#utility.yul\":526:548   */\n      add\n        /* \"#utility.yul\":505:558   */\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":495:558   */\n      swap2\n      pop\n        /* \"#utility.yul\":451:568   */\n      pop\n        /* \"#utility.yul\":379:575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:859   */\n    tag_21:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_59:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:842   */\n      tag_60\n        /* \"#utility.yul\":834:841   */\n      dup5\n        /* \"#utility.yul\":825:831   */\n      dup3\n        /* \"#utility.yul\":814:823   */\n      dup6\n        /* \"#utility.yul\":810:832   */\n      add\n        /* \"#utility.yul\":781:842   */\n      tag_51\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":771:842   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:852   */\n      pop\n        /* \"#utility.yul\":655:859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":865:1007   */\n    tag_61:\n        /* \"#utility.yul\":968:1000   */\n      tag_63\n        /* \"#utility.yul\":994:999   */\n      dup2\n        /* \"#utility.yul\":968:1000   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":956:1001   */\n      mstore\n        /* \"#utility.yul\":946:1007   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1013:1379   */\n    tag_65:\n        /* \"#utility.yul\":1155:1158   */\n      0x00\n        /* \"#utility.yul\":1176:1243   */\n      tag_67\n        /* \"#utility.yul\":1240:1242   */\n      0x17\n        /* \"#utility.yul\":1235:1238   */\n      dup4\n        /* \"#utility.yul\":1176:1243   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1169:1243   */\n      swap2\n      pop\n        /* \"#utility.yul\":1252:1345   */\n      tag_69\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1252:1345   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1370:1372   */\n      0x20\n        /* \"#utility.yul\":1365:1368   */\n      dup3\n        /* \"#utility.yul\":1361:1373   */\n      add\n        /* \"#utility.yul\":1354:1373   */\n      swap1\n      pop\n        /* \"#utility.yul\":1159:1379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1385:1503   */\n    tag_71:\n        /* \"#utility.yul\":1472:1496   */\n      tag_73\n        /* \"#utility.yul\":1490:1495   */\n      dup2\n        /* \"#utility.yul\":1472:1496   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1467:1470   */\n      dup3\n        /* \"#utility.yul\":1460:1497   */\n      mstore\n        /* \"#utility.yul\":1450:1503   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1763   */\n    tag_17:\n        /* \"#utility.yul\":1618:1622   */\n      0x00\n        /* \"#utility.yul\":1656:1658   */\n      0x20\n        /* \"#utility.yul\":1645:1654   */\n      dup3\n        /* \"#utility.yul\":1641:1659   */\n      add\n        /* \"#utility.yul\":1633:1659   */\n      swap1\n      pop\n        /* \"#utility.yul\":1669:1756   */\n      tag_76\n        /* \"#utility.yul\":1753:1754   */\n      0x00\n        /* \"#utility.yul\":1742:1751   */\n      dup4\n        /* \"#utility.yul\":1738:1755   */\n      add\n        /* \"#utility.yul\":1729:1735   */\n      dup5\n        /* \"#utility.yul\":1669:1756   */\n      tag_61\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1623:1763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1769:2188   */\n    tag_36:\n        /* \"#utility.yul\":1935:1939   */\n      0x00\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1958:1976   */\n      add\n        /* \"#utility.yul\":1950:1976   */\n      swap1\n      pop\n        /* \"#utility.yul\":2022:2031   */\n      dup2\n        /* \"#utility.yul\":2016:2020   */\n      dup2\n        /* \"#utility.yul\":2012:2032   */\n      sub\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1993:2010   */\n      add\n        /* \"#utility.yul\":1986:2033   */\n      mstore\n        /* \"#utility.yul\":2050:2181   */\n      tag_78\n        /* \"#utility.yul\":2176:2180   */\n      dup2\n        /* \"#utility.yul\":2050:2181   */\n      tag_65\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2042:2181   */\n      swap1\n      pop\n        /* \"#utility.yul\":1940:2188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2194:2416   */\n    tag_31:\n        /* \"#utility.yul\":2287:2291   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2328   */\n      add\n        /* \"#utility.yul\":2302:2328   */\n      swap1\n      pop\n        /* \"#utility.yul\":2338:2409   */\n      tag_80\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2338:2409   */\n      tag_71\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2292:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2591   */\n    tag_68:\n        /* \"#utility.yul\":2506:2517   */\n      0x00\n        /* \"#utility.yul\":2540:2546   */\n      dup3\n        /* \"#utility.yul\":2535:2538   */\n      dup3\n        /* \"#utility.yul\":2528:2547   */\n      mstore\n        /* \"#utility.yul\":2580:2584   */\n      0x20\n        /* \"#utility.yul\":2575:2578   */\n      dup3\n        /* \"#utility.yul\":2571:2585   */\n      add\n        /* \"#utility.yul\":2556:2585   */\n      swap1\n      pop\n        /* \"#utility.yul\":2518:2591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2597:2693   */\n    tag_82:\n        /* \"#utility.yul\":2634:2641   */\n      0x00\n        /* \"#utility.yul\":2663:2687   */\n      tag_84\n        /* \"#utility.yul\":2681:2686   */\n      dup3\n        /* \"#utility.yul\":2663:2687   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2652:2687   */\n      swap1\n      pop\n        /* \"#utility.yul\":2642:2693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2803   */\n    tag_64:\n        /* \"#utility.yul\":2744:2751   */\n      0x00\n        /* \"#utility.yul\":2773:2797   */\n      tag_87\n        /* \"#utility.yul\":2791:2796   */\n      dup3\n        /* \"#utility.yul\":2773:2797   */\n      tag_85\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2762:2797   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2809:2935   */\n    tag_85:\n        /* \"#utility.yul\":2846:2853   */\n      0x00\n        /* \"#utility.yul\":2886:2928   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2879:2884   */\n      dup3\n        /* \"#utility.yul\":2875:2929   */\n      and\n        /* \"#utility.yul\":2864:2929   */\n      swap1\n      pop\n        /* \"#utility.yul\":2854:2935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3018   */\n    tag_74:\n        /* \"#utility.yul\":2978:2985   */\n      0x00\n        /* \"#utility.yul\":3007:3012   */\n      dup2\n        /* \"#utility.yul\":2996:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":2986:3018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3197   */\n    tag_70:\n        /* \"#utility.yul\":3164:3189   */\n      0x63616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":3160:3161   */\n      0x00\n        /* \"#utility.yul\":3152:3158   */\n      dup3\n        /* \"#utility.yul\":3148:3162   */\n      add\n        /* \"#utility.yul\":3141:3190   */\n      mstore\n        /* \"#utility.yul\":3130:3197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3325   */\n    tag_50:\n        /* \"#utility.yul\":3276:3300   */\n      tag_92\n        /* \"#utility.yul\":3294:3299   */\n      dup2\n        /* \"#utility.yul\":3276:3300   */\n      tag_82\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3269:3274   */\n      dup2\n        /* \"#utility.yul\":3266:3301   */\n      eq\n        /* \"#utility.yul\":3256:3258   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3312:3313   */\n      dup1\n        /* \"#utility.yul\":3305:3317   */\n      revert\n        /* \"#utility.yul\":3256:3258   */\n    tag_93:\n        /* \"#utility.yul\":3246:3325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3469   */\n    tag_54:\n        /* \"#utility.yul\":3412:3444   */\n      tag_95\n        /* \"#utility.yul\":3438:3443   */\n      dup2\n        /* \"#utility.yul\":3412:3444   */\n      tag_64\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3405:3410   */\n      dup2\n        /* \"#utility.yul\":3402:3445   */\n      eq\n        /* \"#utility.yul\":3392:3394   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3456:3457   */\n      dup1\n        /* \"#utility.yul\":3449:3461   */\n      revert\n        /* \"#utility.yul\":3392:3394   */\n    tag_96:\n        /* \"#utility.yul\":3382:3469   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a560e8cf22a2de5447effd336cba1553bc505290520b70ce98ea60663123fca964736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061061c806100206000396000f3fe6080604052600436106100555760003560e01c80636fab5ddf1461005a5780638aa96f38146100645780638da5cb5b1461007b578063a2dea26f146100a6578063abaa9916146100cf578063ffd40b56146100d9575b600080fd5b610062610116565b005b34801561007057600080fd5b506100796101be565b005b34801561008757600080fd5b50610090610297565b60405161009d91906104da565b60405180910390f35b3480156100b257600080fd5b506100cd60048036038101906100c89190610470565b6102bd565b005b6100d7610390565b005b3480156100e557600080fd5b5061010060048036038101906100fb9190610447565b6103d5565b60405161010d9190610515565b60405180910390f35b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610245906104f5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610294573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161030857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561038c573d6000803e3d6000fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008135905061042c816105b8565b92915050565b600081359050610441816105cf565b92915050565b60006020828403121561045957600080fd5b60006104678482850161041d565b91505092915050565b60006020828403121561048257600080fd5b600061049084828501610432565b91505092915050565b6104a281610553565b82525050565b60006104b5601783610530565b91506104c08261058f565b602082019050919050565b6104d481610585565b82525050565b60006020820190506104ef6000830184610499565b92915050565b6000602082019050818103600083015261050e816104a8565b9050919050565b600060208201905061052a60008301846104cb565b92915050565b600082825260208201905092915050565b600061054c82610565565b9050919050565b600061055e82610565565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b6105c181610541565b81146105cc57600080fd5b50565b6105d881610553565b81146105e357600080fd5b5056fea2646970667358221220a560e8cf22a2de5447effd336cba1553bc505290520b70ce98ea60663123fca964736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FAB5DDF EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x8AA96F38 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xA2DEA26F EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xABAA9916 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xFFD40B56 EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x390 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x294 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42C DUP2 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x441 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x467 DUP5 DUP3 DUP6 ADD PUSH2 0x41D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x490 DUP5 DUP3 DUP6 ADD PUSH2 0x432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH1 0x17 DUP4 PUSH2 0x530 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0 DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH2 0x585 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50E DUP2 PUSH2 0x4A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55E DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP2 EQ PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH1 0xE8 0xCF 0x22 LOG2 0xDE SLOAD SELFBALANCE 0xEF REVERT CALLER PUSH13 0xBA1553BC505290520B70CE98EA PUSH1 0x66 BALANCE 0x23 0xFC 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "60:881:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3472:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "425:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "434:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "437:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "427:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "427:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "427:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "400:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "409:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:32:1"
															},
															"nodeType": "YulIf",
															"src": "389:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "451:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "466:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "480:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "470:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "495:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "530:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "541:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "526:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "526:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "550:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "505:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "505:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "495:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "349:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "360:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "372:6:1",
														"type": ""
													}
												],
												"src": "313:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:1"
															},
															"nodeType": "YulIf",
															"src": "665:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "814:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "825:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "810:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "810:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "834:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "781:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:1",
														"type": ""
													}
												],
												"src": "581:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "968:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "956:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "941:3:1",
														"type": ""
													}
												],
												"src": "865:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1159:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1169:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1235:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1176:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1169:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
																	"nodeType": "YulIdentifier",
																	"src": "1252:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1354:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1365:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1147:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1155:3:1",
														"type": ""
													}
												],
												"src": "1013:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1467:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1490:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1472:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1472:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1460:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1438:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1445:3:1",
														"type": ""
													}
												],
												"src": "1385:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1623:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1633:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1633:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1742:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1753:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1738:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1669:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1595:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1607:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1618:4:1",
														"type": ""
													}
												],
												"src": "1509:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1950:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1950:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2016:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2022:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2042:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2176:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2050:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2042:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1935:4:1",
														"type": ""
													}
												],
												"src": "1769:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2302:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2338:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2338:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2287:4:1",
														"type": ""
													}
												],
												"src": "2194:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2535:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2540:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2528:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2556:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2575:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2580:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2571:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2556:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2490:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2495:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2506:11:1",
														"type": ""
													}
												],
												"src": "2422:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2642:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2652:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2681:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2663:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2652:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2624:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2634:7:1",
														"type": ""
													}
												],
												"src": "2597:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2762:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2791:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2773:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2762:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2734:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2744:7:1",
														"type": ""
													}
												],
												"src": "2699:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2864:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2879:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2836:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2846:7:1",
														"type": ""
													}
												],
												"src": "2809:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2996:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3007:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2996:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2968:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2978:7:1",
														"type": ""
													}
												],
												"src": "2941:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3130:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3152:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3164:25:1",
																		"type": "",
																		"value": "caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3141:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3122:6:1",
														"type": ""
													}
												],
												"src": "3024:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3246:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3303:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3315:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3305:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3269:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3294:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3276:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3276:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3266:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:43:1"
															},
															"nodeType": "YulIf",
															"src": "3256:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3239:5:1",
														"type": ""
													}
												],
												"src": "3203:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3382:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3447:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3456:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3449:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3449:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3449:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3438:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "3412:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3412:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3402:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3402:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:51:1"
															},
															"nodeType": "YulIf",
															"src": "3392:2:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3375:5:1",
														"type": ""
													}
												],
												"src": "3331:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80636fab5ddf1461005a5780638aa96f38146100645780638da5cb5b1461007b578063a2dea26f146100a6578063abaa9916146100cf578063ffd40b56146100d9575b600080fd5b610062610116565b005b34801561007057600080fd5b506100796101be565b005b34801561008757600080fd5b50610090610297565b60405161009d91906104da565b60405180910390f35b3480156100b257600080fd5b506100cd60048036038101906100c89190610470565b6102bd565b005b6100d7610390565b005b3480156100e557600080fd5b5061010060048036038101906100fb9190610447565b6103d5565b60405161010d9190610515565b60405180910390f35b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610245906104f5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610294573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161030857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561038c573d6000803e3d6000fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008135905061042c816105b8565b92915050565b600081359050610441816105cf565b92915050565b60006020828403121561045957600080fd5b60006104678482850161041d565b91505092915050565b60006020828403121561048257600080fd5b600061049084828501610432565b91505092915050565b6104a281610553565b82525050565b60006104b5601783610530565b91506104c08261058f565b602082019050919050565b6104d481610585565b82525050565b60006020820190506104ef6000830184610499565b92915050565b6000602082019050818103600083015261050e816104a8565b9050919050565b600060208201905061052a60008301846104cb565b92915050565b600082825260208201905092915050565b600061054c82610565565b9050919050565b600061055e82610565565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b6105c181610541565b81146105cc57600080fd5b50565b6105d881610553565b81146105e357600080fd5b5056fea2646970667358221220a560e8cf22a2de5447effd336cba1553bc505290520b70ce98ea60663123fca964736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FAB5DDF EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x8AA96F38 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xA2DEA26F EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xABAA9916 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xFFD40B56 EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x390 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x294 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42C DUP2 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x441 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x467 DUP5 DUP3 DUP6 ADD PUSH2 0x41D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x490 DUP5 DUP3 DUP6 ADD PUSH2 0x432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH1 0x17 DUP4 PUSH2 0x530 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0 DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH2 0x585 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50E DUP2 PUSH2 0x4A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55E DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP2 EQ PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x553 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH1 0xE8 0xCF 0x22 LOG2 0xDE SLOAD SELFBALANCE 0xEF REVERT CALLER PUSH13 0xBA1553BC505290520B70CE98EA PUSH1 0x66 BALANCE 0x23 0xFC 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "60:881:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:111;;;:::i;:::-;;707;;;;;;;;;;;;;:::i;:::-;;128:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;546:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;457:83;;;:::i;:::-;;824:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;186:111;243:10;227:5;;:27;;;;;;;;;;;;;;;;;;282:9;261:11;:18;273:5;;;;;;;;;;;261:18;;;;;;;;;;;;;;;:30;;;;186:111::o;707:::-;371:5;;;;;;;;;;;357:19;;:10;:19;;;334:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;769:10:::1;761:28;;:51;790:21;761:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;707:111::o:0;128:28::-;;;;;;;;;;;;;:::o;546:155::-;644:1;619:11;:22;631:9;619:22;;;;;;;;;;;;;;;;:26;611:35;;;;;;653:9;:18;;:42;672:11;:22;684:9;672:22;;;;;;;;;;;;;;;;653:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:155;:::o;457:83::-;525:9;499:11;:23;511:10;499:23;;;;;;;;;;;;;;;:35;;;;457:83::o;824:114::-;890:4;910:11;:22;922:9;910:22;;;;;;;;;;;;;;;;903:29;;824:114;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:262::-;372:6;421:2;409:9;400:7;396:23;392:32;389:2;;;437:1;434;427:12;389:2;480:1;505:53;550:7;541:6;530:9;526:22;505:53;:::i;:::-;495:63;;451:117;379:196;;;;:::o;581:278::-;648:6;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:61;834:7;825:6;814:9;810:22;781:61;:::i;:::-;771:71;;727:125;655:204;;;;:::o;865:142::-;968:32;994:5;968:32;:::i;:::-;963:3;956:45;946:61;;:::o;1013:366::-;1155:3;1176:67;1240:2;1235:3;1176:67;:::i;:::-;1169:74;;1252:93;1341:3;1252:93;:::i;:::-;1370:2;1365:3;1361:12;1354:19;;1159:220;;;:::o;1385:118::-;1472:24;1490:5;1472:24;:::i;:::-;1467:3;1460:37;1450:53;;:::o;1509:254::-;1618:4;1656:2;1645:9;1641:18;1633:26;;1669:87;1753:1;1742:9;1738:17;1729:6;1669:87;:::i;:::-;1623:140;;;;:::o;1769:419::-;1935:4;1973:2;1962:9;1958:18;1950:26;;2022:9;2016:4;2012:20;2008:1;1997:9;1993:17;1986:47;2050:131;2176:4;2050:131;:::i;:::-;2042:139;;1940:248;;;:::o;2194:222::-;2287:4;2325:2;2314:9;2310:18;2302:26;;2338:71;2406:1;2395:9;2391:17;2382:6;2338:71;:::i;:::-;2292:124;;;;:::o;2422:169::-;2506:11;2540:6;2535:3;2528:19;2580:4;2575:3;2571:14;2556:29;;2518:73;;;;:::o;2597:96::-;2634:7;2663:24;2681:5;2663:24;:::i;:::-;2652:35;;2642:51;;;:::o;2699:104::-;2744:7;2773:24;2791:5;2773:24;:::i;:::-;2762:35;;2752:51;;;:::o;2809:126::-;2846:7;2886:42;2879:5;2875:54;2864:65;;2854:81;;;:::o;2941:77::-;2978:7;3007:5;2996:16;;2986:32;;;:::o;3024:173::-;3164:25;3160:1;3152:6;3148:14;3141:49;3130:67;:::o;3203:122::-;3276:24;3294:5;3276:24;:::i;:::-;3269:5;3266:35;3256:2;;3315:1;3312;3305:12;3256:2;3246:79;:::o;3331:138::-;3412:32;3438:5;3412:32;:::i;:::-;3405:5;3402:43;3392:2;;3459:1;3456;3449:12;3392:2;3382:87;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "312800",
								"executionCost": "349",
								"totalCost": "313149"
							},
							"external": {
								"Fal1out()": "41903",
								"allocate()": "20288",
								"allocatorBalance(address)": "1629",
								"collectAllocations()": "infinite",
								"owner()": "1236",
								"sendAllocation(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 941,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a560e8cf22a2de5447effd336cba1553bc505290520b70ce98ea60663123fca964736f6c63430008040033",
									".code": [
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "6FAB5DDF"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "8AA96F38"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "A2DEA26F"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "ABAA9916"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "FFD40B56"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 186,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 297,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 540,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 186,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 253,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 227,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 227,
											"end": 254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 227,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 291,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 273,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 261,
											"end": 291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 291,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 297,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 367,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 357,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 769,
											"end": 779,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 761,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 790,
											"end": 811,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 761,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 619,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 619,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 619,
											"end": 641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 611,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 611,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 672,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 701,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 457,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 534,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 499,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 890,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 910,
											"end": 932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 938,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 575,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 313,
											"end": 575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 396,
											"end": 419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 392,
											"end": 424,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 439,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 480,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 550,
											"end": 557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 541,
											"end": 547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 539,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 526,
											"end": 548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 505,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 581,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 814,
											"end": 823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 810,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 865,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 994,
											"end": 999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1013,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1013,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1235,
											"end": 1238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1176,
											"end": 1243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1243,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1176,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1252,
											"end": 1345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1345,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1252,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1379,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1385,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1385,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1490,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1472,
											"end": 1496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1496,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1472,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1503,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1669,
											"end": 1756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1756,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1669,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1763,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1763,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1769,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1769,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2050,
											"end": 2181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2050,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2050,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2416,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2422,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2597,
											"end": 2693,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2597,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2681,
											"end": 2686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2693,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2803,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2699,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2791,
											"end": 2796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2929,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2935,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3197,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3024,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "63616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3203,
											"end": 3325,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3203,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3294,
											"end": 3299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3331,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3331,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3438,
											"end": 3443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Fal1out()": "6fab5ddf",
							"allocate()": "abaa9916",
							"allocatorBalance(address)": "ffd40b56",
							"collectAllocations()": "8aa96f38",
							"owner()": "8da5cb5b",
							"sendAllocation(address)": "a2dea26f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Fal1out\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"allocatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"sendAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fallout.sol\":\"Fallout\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fallout.sol\":{\"keccak256\":\"0x78e5ec733f6bcebd1f58d7d86c51fa2c0a1d6b77d412d26548119b74c27bcd7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d11ddfb4615c74e607a141bd8926316b3f202b5c615fcbf69b9ef93131fd60b3\",\"dweb:/ipfs/QmexNMiDquqNC1MsviM4VFik9ixixR95ha8G15viTyn2zU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/fallout.sol:Fallout",
								"label": "allocations",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "contracts/fallout.sol:Fallout",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/fallout.sol": {
				"ast": {
					"absolutePath": "contracts/fallout.sol",
					"exportedSymbols": {
						"Fallout": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "Fallout",
							"nameLocation": "69:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "allocations",
									"nameLocation": "112:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "86:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "95:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "86:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "106:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "151:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "128:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "128:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "220:77:0",
										"statements": [
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "227:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "243:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "243:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "235:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 11,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "235:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "235:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "227:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "227:27:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 18,
															"name": "allocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "261:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 20,
														"indexExpression": {
															"id": 19,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "261:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "282:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "282:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "261:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "261:30:0"
											}
										]
									},
									"functionSelector": "6fab5ddf",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Fal1out",
									"nameLocation": "195:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:0:0"
									},
									"scope": 104,
									"src": "186:111:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "322:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 29,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "357:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "357:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 31,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "371:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "357:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206973206e6f7420746865206f776e6572",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "392:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
																"typeString": "literal_string \"caller is not the owner\""
															},
															"value": "caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
																"typeString": "literal_string \"caller is not the owner\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "334:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "334:95:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "441:1:0"
											}
										]
									},
									"id": 38,
									"name": "onlyOwner",
									"nameLocation": "312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:0"
									},
									"src": "303:148:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "492:48:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 41,
															"name": "allocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "499:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 44,
														"indexExpression": {
															"expression": {
																"id": 42,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "511:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "499:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 45,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "525:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "525:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "499:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "499:35:0"
											}
										]
									},
									"functionSelector": "abaa9916",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "466:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "492:0:0"
									},
									"scope": 104,
									"src": "457:83:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "604:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 56,
																	"name": "allocations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "619:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 58,
																"indexExpression": {
																	"id": 57,
																	"name": "allocator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "631:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "619:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "644:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "619:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "611:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 66,
																"name": "allocations",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "672:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 68,
															"indexExpression": {
																"id": 67,
																"name": "allocator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "672:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 63,
															"name": "allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "653:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "653:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "653:42:0"
											}
										]
									},
									"functionSelector": "a2dea26f",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendAllocation",
									"nameLocation": "555:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "586:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "570:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:27:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "604:0:0"
									},
									"scope": 104,
									"src": "546:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "754:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 85,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "798:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Fallout_$104",
																			"typeString": "contract Fallout"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Fallout_$104",
																			"typeString": "contract Fallout"
																		}
																	],
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "790:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 83,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "790:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "790:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "790:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 79,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "769:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "769:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "761:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 77,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "761:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "761:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "761:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "761:51:0"
											}
										]
									},
									"functionSelector": "8aa96f38",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 75,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 74,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "744:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "744:9:0"
										}
									],
									"name": "collectAllocations",
									"nameLocation": "716:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:0"
									},
									"scope": 104,
									"src": "707:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "896:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 98,
														"name": "allocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 100,
													"indexExpression": {
														"id": 99,
														"name": "allocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "922:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "910:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 101,
												"nodeType": "Return",
												"src": "903:29:0"
											}
										]
									},
									"functionSelector": "ffd40b56",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocatorBalance",
									"nameLocation": "833:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "858:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "850:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:19:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:6:0"
									},
									"scope": 104,
									"src": "824:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 105,
							"src": "60:881:0",
							"usedErrors": []
						}
					],
					"src": "33:908:0"
				},
				"id": 0
			}
		}
	}
}